{"mappings":"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","sources":["./node_modules/@parcel/runtime-js/lib/JSRuntime.js","node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./src/cubing/puzzles/index.ts","./src/cubing/puzzles/implementations/3x3x3/3x3x3.kpuzzle.json_.ts","./src/cubing/puzzles/async/async-pg3d.ts","node_modules/@babel/runtime/helpers/interopRequireWildcard.js","node_modules/@babel/runtime/helpers/typeof.js","./src/cubing/puzzles/stickerings/cube-stickerings.ts","./src/cubing/puzzles/stickerings/appearance.ts","./src/cubing/kpuzzle/index.ts","./src/cubing/kpuzzle/kpuzzle.ts","./src/cubing/kpuzzle/transformations.ts","./src/cubing/kpuzzle/canonicalize.ts","./src/cubing/kpuzzle/parser/index.ts","./src/cubing/kpuzzle/parser/parser-shim.ts","./src/cubing/kpuzzle/parser/parser-pegjs.js","./src/cubing/kpuzzle/svg.ts","./src/cubing/kpuzzle/puzzle-orientation.ts","./src/cubing/protocol/index.ts","./src/cubing/protocol/binary/binary3x3x3.ts","./src/cubing/protocol/binary/orbit-indexing.ts","./src/cubing/protocol/binary/puzzle-orientation.ts","./src/cubing/protocol/binary/hex.ts","node_modules/@parcel/runtime-js/lib/loaders/browser/js-loader.js","node_modules/@parcel/runtime-js/lib/cacheLoader.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","./src/cubing/puzzles/implementations/2x2x2/index.ts","./src/cubing/puzzles/implementations/3x3x3/index.ts","./src/cubing/puzzles/implementations/clock/index.ts","./src/cubing/puzzles/implementations/fto/index.ts","./src/cubing/puzzles/stickerings/fto-stickerings.ts","./src/cubing/puzzles/implementations/megaminx/index.ts","./src/cubing/puzzles/stickerings/megaminx-stickerings.ts","./src/cubing/puzzles/implementations/pyraminx/index.ts","./src/cubing/puzzles/implementations/square1/index.ts"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _plugin() {\n  const data = require(\"@parcel/plugin\");\n\n  _plugin = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _utils() {\n  const data = require(\"@parcel/utils\");\n\n  _utils = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _nullthrows() {\n  const data = _interopRequireDefault(require(\"nullthrows\"));\n\n  _nullthrows = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n}; // Used for as=\"\" in preload/prefetch\n\nconst TYPE_TO_RESOURCE_PRIORITY = {\n  css: 'style',\n  js: 'script'\n};\nconst BROWSER_PRELOAD_LOADER = './loaders/browser/preload-loader';\nconst BROWSER_PREFETCH_LOADER = './loaders/browser/prefetch-loader';\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n}\n\nvar _default = new (_plugin().Runtime)({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        // If this bundle already has the asset this dependency references,\n        // return a simple runtime of `Promise.resolve(require(\"path/to/asset\"))`.\n        assets.push({\n          filePath: _path().default.join(options.projectRoot, 'JSRuntime.js'),\n          // Using Promise['resolve'] to prevent Parcel from inferring this is an async dependency.\n          // TODO: Find a better way of doing this.\n          code: `module.exports = Promise['resolve'](require(${JSON.stringify('./' + _path().default.relative(options.projectRoot, resolved.value.filePath))}))`,\n          dependency\n        });\n      } else {\n        let loaderRuntime = getLoaderRuntime({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value\n        });\n\n        if (loaderRuntime != null) {\n          assets.push(loaderRuntime);\n        }\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      // Resolve the dependency to a bundle. If inline, export the dependency id,\n      // which will be replaced with the contents of that bundle later.\n      let referencedBundle = bundleGraph.getReferencedBundle(dependency, bundle);\n\n      if (referencedBundle === null || referencedBundle === void 0 ? void 0 : referencedBundle.isInline) {\n        assets.push({\n          filePath: _path().default.join(__dirname, `/bundles/${referencedBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // Otherwise, try to resolve the dependency to an external bundle group\n      // and insert a URL to that bundle.\n\n\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows().default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let entries = b.getEntryAssets();\n        return entries.some(e => bundleGroup.entryAssetId === e.id);\n      }));\n\n      if (bundle.env.outputFormat === 'commonjs' && mainBundle.type === 'js') {\n        assets.push({\n          filePath: __filename,\n          dependency,\n          code: `module.exports = require(\"./\" + ${getRelativePathExpr(bundle, mainBundle)})`\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle));\n    }\n\n    if (shouldUseRuntimeManifest(bundle) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getLoaderRuntime({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph\n}) {\n  let loaders = getLoaders(bundle.env);\n\n  if (loaders == null) {\n    return;\n  } // Sort so the bundles containing the entry asset appear last\n\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline).sort(bundle => bundle.getEntryAssets().map(asset => asset.id).includes(bundleGroup.entryAssetId) ? 1 : -1); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary) {\n    externalBundles = externalBundles.slice(-1);\n  } // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows().default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    return `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n  }).filter(Boolean);\n\n  if (bundle.env.context === 'browser') {\n    loaderModules.push(...(0, _utils().flatMap)( // TODO: Allow css to preload resources as well\n    externalBundles.filter(to => to.type === 'js'), from => {\n      let {\n        preload,\n        prefetch\n      } = getHintedBundleGroups(bundleGraph, from);\n      return [...getHintLoaders(bundleGraph, bundle, preload, BROWSER_PRELOAD_LOADER), ...getHintLoaders(bundleGraph, bundle, prefetch, BROWSER_PREFETCH_LOADER)];\n    }));\n  }\n\n  if (loaderModules.length === 0) {\n    return;\n  }\n\n  let loaderCode = loaderModules.join(', ');\n\n  if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n    loaderCode = `Promise.all([${loaderCode}])`;\n\n    if (bundle.env.outputFormat !== 'global') {\n      loaderCode += `.then(r => r[r.length - 1])`;\n    }\n  } else {\n    loaderCode = `(${loaderCode})`;\n  }\n\n  if (bundle.env.outputFormat === 'global') {\n    loaderCode += `.then(() => module.bundle.root('${bundleGraph.getAssetPublicId(bundleGraph.getAssetById(bundleGroup.entryAssetId))}')${// In global output with scope hoisting, functions return exports are\n    // always returned. Otherwise, the exports are returned.\n    bundle.env.scopeHoist ? '()' : ''})`;\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = ${loaderCode};`,\n    dependency\n  };\n}\n\nfunction getHintedBundleGroups(bundleGraph, bundle) {\n  let preload = [];\n  let prefetch = [];\n  bundle.traverse(node => {\n    var _dependency$meta;\n\n    if (node.type !== 'dependency') {\n      return;\n    }\n\n    let dependency = node.value; // $FlowFixMe\n\n    let attributes = (_dependency$meta = dependency.meta) === null || _dependency$meta === void 0 ? void 0 : _dependency$meta.importAttributes;\n\n    if (dependency.isAsync && !dependency.isURL && typeof attributes === 'object' && attributes != null && ( // $FlowFixMe\n    attributes.preload || attributes.prefetch)) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if ((resolved === null || resolved === void 0 ? void 0 : resolved.type) === 'bundle_group') {\n        // === true for flow\n        if (attributes.preload === true) {\n          preload.push(resolved.value);\n        }\n\n        if (attributes.prefetch === true) {\n          prefetch.push(resolved.value);\n        }\n      }\n    }\n  });\n  return {\n    preload,\n    prefetch\n  };\n}\n\nfunction getHintLoaders(bundleGraph, from, bundleGroups, loader) {\n  let hintLoaders = [];\n\n  for (let bundleGroupToPreload of bundleGroups) {\n    let bundlesToPreload = bundleGraph.getBundlesInBundleGroup(bundleGroupToPreload);\n\n    for (let bundleToPreload of bundlesToPreload) {\n      let relativePathExpr = getRelativePathExpr(from, bundleToPreload);\n      let priority = TYPE_TO_RESOURCE_PRIORITY[bundleToPreload.type];\n      hintLoaders.push(`require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr}, ${priority ? JSON.stringify(priority) : 'null'}, ${JSON.stringify(bundleToPreload.target.env.outputFormat === 'esmodule')})`);\n    }\n  }\n\n  return hintLoaders;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  let parents = bundleGraph.getParentBundles(bundle);\n  return bundle.isEntry || parents.length === 0 || parents.some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to) {\n  let relativePathExpr = getRelativePathExpr(from, to);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[bundle.publicId] = (0, _nullthrows().default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to) {\n  if (shouldUseRuntimeManifest(from)) {\n    return `require('./relative-path')(${JSON.stringify(from.publicId)}, ${JSON.stringify(to.publicId)})`;\n  }\n\n  return JSON.stringify((0, _utils().relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser();\n}","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","export { cube3x3x3KPuzzle as experimentalCube3x3x3KPuzzle } from \"./implementations/3x3x3/3x3x3.kpuzzle.json_\";\n\nimport { cubePGPuzzleLoader, genericPGPuzzleLoader } from \"./async/async-pg3d\";\nimport { cube2x2x2 } from \"./implementations/2x2x2\";\nimport { cube3x3x3 } from \"./implementations/3x3x3\";\nimport { clock } from \"./implementations/clock\";\nimport { fto } from \"./implementations/fto\";\nimport { megaminx } from \"./implementations/megaminx\";\nimport { pyraminx } from \"./implementations/pyraminx\";\nimport { square1 } from \"./implementations/square1\";\nimport { PuzzleLoader } from \"./PuzzleLoader\";\n\nexport const puzzles: Record<string, PuzzleLoader> = {\n  /******** Start of WCA Puzzles *******/\n  \"3x3x3\": cube3x3x3,\n  \"2x2x2\": cube2x2x2,\n  \"4x4x4\": cubePGPuzzleLoader(\"4x4x4\", \"4×4×4 Cube\"),\n  \"5x5x5\": cubePGPuzzleLoader(\"5x5x5\", \"5×5×5 Cube\"),\n  \"6x6x6\": cubePGPuzzleLoader(\"6x6x6\", \"6×6×6 Cube\"),\n  \"7x7x7\": cubePGPuzzleLoader(\"7x7x7\", \"7×7×7 Cube\"),\n  \"40x40x40\": cubePGPuzzleLoader(\"40x40x40\", \"40×40×40 Cube\"),\n  // 3x3x3 Blindfolded\n  // 3x3x3 Fewest Moves\n  // 3x3x3 One-Handed\n  clock,\n  \"megaminx\": megaminx,\n  pyraminx,\n  \"skewb\": genericPGPuzzleLoader(\"skewb\", \"Skewb\", {\n    inventedBy: [\"Tony Durham\"], // https://www.jaapsch.net/puzzles/skewb.htm\n    // inventionYear: 1982, // 1982 is actually the year of Hofstadter's column.\n  }),\n  square1,\n  // 4x4x4 Blindfolded\n  // 5x5x5 Blindfolded\n  /******** End of WCA puzzles ********/\n  \"fto\": fto,\n  \"gigaminx\": genericPGPuzzleLoader(\"gigaminx\", \"Gigaminx\", {\n    inventedBy: [\"Tyler Fox\"],\n    inventionYear: 2006, // Earliest date from https://www.twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1475\n  }),\n};\n\nexport { cube2x2x2, cube3x3x3 };\n\nexport { getFaceletAppearance as experimentalGetFaceletAppearance } from \"./stickerings/appearance\";\nexport type {\n  FaceletMeshAppearance as ExperimentalFaceletMeshAppearance,\n  PuzzleAppearance as ExperimentalPuzzleAppearance,\n} from \"./stickerings/appearance\";\n\n// // TODO: find a better way to share these defs.\n// for (const puzzleName of [\n//   // \"2x2x2\",\n//   // \"3x3x3\",\n//   \"4x4x4\",\n//   \"5x5x5\",\n//   \"6x6x6\",\n//   \"7x7x7\",\n//   \"8x8x8\",\n//   \"9x9x9\",\n//   \"10x10x10\",\n//   \"11x11x11\",\n//   \"12x12x12\",\n//   \"13x13x13\",\n//   \"20x20x20\",\n//   \"30x30x30\",\n//   // \"skewb\",\n//   \"master skewb\",\n//   \"professor skewb\",\n//   \"compy cube\",\n//   \"helicopter\",\n//   \"curvy copter\",\n//   \"dino\",\n//   \"little chop\",\n//   \"pyramorphix\",\n//   \"mastermorphix\",\n//   \"pyraminx\",\n//   \"master pyraminx\",\n//   \"professor pyraminx\",\n//   \"Jing pyraminx\",\n//   \"master pyramorphix\",\n//   // \"megaminx\",\n//   \"gigaminx\",\n//   \"pentultimate\",\n//   \"starminx\",\n//   \"starminx 2\",\n//   \"pyraminx crystal\",\n//   \"chopasaurus\",\n//   \"big chop\",\n//   \"skewb diamond\",\n//   // \"FTO\",\n//   \"Christopher's jewel\",\n//   \"octastar\",\n//   \"Trajber's octahedron\",\n//   \"radio chop\",\n//   \"icosamate\",\n//   \"icosahedron 2\",\n//   \"icosahedron 3\",\n//   \"icosahedron static faces\",\n//   \"icosahedron moving faces\",\n//   \"Eitan's star\",\n//   \"2x2x2 + dino\",\n//   \"2x2x2 + little chop\",\n//   \"dino + little chop\",\n//   \"2x2x2 + dino + little chop\",\n//   \"megaminx + chopasaurus\",\n//   \"starminx combo\",\n// ]) {\n//   if (!(puzzleName in puzzles)) {\n//     puzzles[puzzleName] = {\n//       id: puzzleName,\n//       fullName: `${puzzleName} (PG3D)`,\n//       def: async () => {\n//         return asyncGetDef(puzzleName);\n//       },\n//       svg: async () => {\n//         throw \"Unimplemented!\";\n//       },\n//       pg3d: async () => {\n//         return asyncGetPuzzleGeometry(puzzleName);\n//       },\n//     };\n//   }\n// }\n","// TODO: this would be a raw `.json` file, but Parcel runs into an error from\n\nimport type { KPuzzleDefinition } from \"../../../kpuzzle\";\n\n// using that as both a sync and async import. Probably https://github.com/parcel-bundler/parcel/issues/2546\nexport const cube3x3x3KPuzzle: KPuzzleDefinition = {\n  name: \"3x3x3\",\n  orbits: {\n    EDGES: { numPieces: 12, orientations: 2 },\n    CORNERS: { numPieces: 8, orientations: 3 },\n    CENTERS: { numPieces: 6, orientations: 4 },\n  },\n  startPieces: {\n    EDGES: {\n      permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    CORNERS: {\n      permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    CENTERS: {\n      permutation: [0, 1, 2, 3, 4, 5],\n      orientation: [0, 0, 0, 0, 0, 0],\n    },\n  },\n  moves: {\n    U: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [1, 0, 0, 0, 0, 0],\n      },\n    },\n    y: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 5, 6, 7, 4, 10, 8, 11, 9],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 7, 4, 5, 6],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 2, 3, 4, 1, 5],\n        orientation: [1, 0, 0, 0, 0, 3],\n      },\n    },\n    x: {\n      EDGES: {\n        permutation: [4, 8, 0, 9, 6, 10, 2, 11, 5, 7, 1, 3],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 3, 5, 7, 6, 2, 1],\n        orientation: [2, 1, 2, 1, 1, 2, 1, 2],\n      },\n      CENTERS: {\n        permutation: [2, 1, 5, 3, 0, 4],\n        orientation: [0, 3, 0, 1, 2, 2],\n      },\n    },\n    L: {\n      EDGES: {\n        permutation: [0, 1, 2, 11, 4, 5, 6, 9, 8, 3, 10, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientation: [0, 0, 2, 1, 0, 2, 1, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 1, 0, 0, 0, 0],\n      },\n    },\n    F: {\n      EDGES: {\n        permutation: [9, 1, 2, 3, 8, 5, 6, 7, 0, 4, 10, 11],\n        orientation: [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],\n      },\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientation: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 1, 0, 0, 0],\n      },\n    },\n    R: {\n      EDGES: {\n        permutation: [0, 8, 2, 3, 4, 10, 6, 7, 5, 9, 1, 11],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientation: [2, 1, 0, 0, 1, 0, 0, 2],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 0, 1, 0, 0],\n      },\n    },\n    B: {\n      EDGES: {\n        permutation: [0, 1, 10, 3, 4, 5, 11, 7, 8, 9, 6, 2],\n        orientation: [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 7, 1, 3, 4, 5, 2, 6],\n        orientation: [0, 2, 1, 0, 0, 0, 2, 1],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 0, 0, 1, 0],\n      },\n    },\n    D: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 0, 0, 0, 1],\n      },\n    },\n    z: {\n      EDGES: {\n        permutation: [9, 3, 11, 7, 8, 1, 10, 5, 0, 4, 2, 6],\n        orientation: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [3, 2, 6, 5, 0, 4, 7, 1],\n        orientation: [1, 2, 1, 2, 2, 1, 2, 1],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientation: [1, 1, 1, 1, 3, 1],\n      },\n    },\n    M: {\n      EDGES: {\n        permutation: [2, 1, 6, 3, 0, 5, 4, 7, 8, 9, 10, 11],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [4, 1, 0, 3, 5, 2],\n        orientation: [2, 0, 0, 0, 2, 0],\n      },\n    },\n    E: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 8, 10],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 4, 1, 2, 3, 5],\n        orientation: [0, 0, 0, 0, 0, 0],\n      },\n    },\n    S: {\n      EDGES: {\n        permutation: [0, 3, 2, 7, 4, 1, 6, 5, 8, 9, 10, 11],\n        orientation: [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientation: [1, 1, 0, 1, 0, 1],\n      },\n    },\n    u: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7, 10, 8, 11, 9],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 2, 3, 4, 1, 5],\n        orientation: [1, 0, 0, 0, 0, 0],\n      },\n    },\n    l: {\n      EDGES: {\n        permutation: [2, 1, 6, 11, 0, 5, 4, 9, 8, 3, 10, 7],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientation: [0, 0, 2, 1, 0, 2, 1, 0],\n      },\n      CENTERS: {\n        permutation: [4, 1, 0, 3, 5, 2],\n        orientation: [2, 1, 0, 0, 2, 0],\n      },\n    },\n    f: {\n      EDGES: {\n        permutation: [9, 3, 2, 7, 8, 1, 6, 5, 0, 4, 10, 11],\n        orientation: [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],\n      },\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientation: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n      CENTERS: {\n        permutation: [1, 5, 2, 0, 4, 3],\n        orientation: [1, 1, 1, 1, 0, 1],\n      },\n    },\n    r: {\n      EDGES: {\n        permutation: [4, 8, 0, 3, 6, 10, 2, 7, 5, 9, 1, 11],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientation: [2, 1, 0, 0, 1, 0, 0, 2],\n      },\n      CENTERS: {\n        permutation: [2, 1, 5, 3, 0, 4],\n        orientation: [0, 0, 0, 1, 2, 2],\n      },\n    },\n    b: {\n      EDGES: {\n        permutation: [8, 5, 2, 1, 9, 7, 6, 3, 4, 0, 10, 11],\n        orientation: [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 1, 2, 0, 5, 3, 6, 7],\n        orientation: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n      CENTERS: {\n        permutation: [3, 0, 2, 5, 4, 1],\n        orientation: [3, 3, 3, 3, 0, 3],\n      },\n    },\n    d: {\n      EDGES: {\n        permutation: [0, 1, 2, 3, 7, 4, 5, 6, 9, 11, 8, 10],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n      CENTERS: {\n        permutation: [0, 4, 1, 2, 3, 5],\n        orientation: [0, 0, 0, 0, 0, 1],\n      },\n    },\n  },\n};\n\ncube3x3x3KPuzzle.moves[\"Uw\"] = cube3x3x3KPuzzle.moves[\"u\"];\ncube3x3x3KPuzzle.moves[\"Lw\"] = cube3x3x3KPuzzle.moves[\"l\"];\ncube3x3x3KPuzzle.moves[\"Fw\"] = cube3x3x3KPuzzle.moves[\"f\"];\ncube3x3x3KPuzzle.moves[\"Rw\"] = cube3x3x3KPuzzle.moves[\"r\"];\ncube3x3x3KPuzzle.moves[\"Bw\"] = cube3x3x3KPuzzle.moves[\"b\"];\ncube3x3x3KPuzzle.moves[\"Dw\"] = cube3x3x3KPuzzle.moves[\"d\"];\n","import type { KPuzzleDefinition } from \"../../kpuzzle\";\nimport type { PuzzleGeometry } from \"../../puzzle-geometry\";\nimport { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  cubeAppearance,\n  cubeStickerings,\n} from \"../stickerings/cube-stickerings\";\n\n// TODO: modify this to handle TwistyPlayer options\nexport async function asyncGetPuzzleGeometry(\n  puzzleName: string,\n): Promise<PuzzleGeometry> {\n  const puzzleGeometry = await import(\"../../puzzle-geometry\");\n  return puzzleGeometry.getPuzzleGeometryByName(puzzleName, [\n    \"allmoves\",\n    \"true\",\n    \"orientcenters\",\n    \"true\",\n    \"rotations\",\n    \"true\",\n  ]);\n}\n\n// TODO: can we cache the puzzleGeometry to avoid duplicate calls, without\n// wasting memory? Maybe just save the latest one for successive calls about the\n// same puzzle?\nexport async function asyncGetDef(\n  puzzleName: string,\n): Promise<KPuzzleDefinition> {\n  return (await asyncGetPuzzleGeometry(puzzleName)).writekpuzzle(true);\n}\n\nexport function genericPGPuzzleLoader(\n  id: string,\n  fullName: string,\n  info?: {\n    inventedBy?: string[];\n    inventionYear?: number;\n  },\n): PuzzleLoader {\n  const puzzleLoader: PuzzleLoader = {\n    id: id,\n    fullName: fullName,\n    def: async () => {\n      return asyncGetDef(id);\n    },\n    svg: async () => {\n      const pg = await asyncGetPuzzleGeometry(id);\n      return pg.generatesvg();\n    },\n    pg: async () => {\n      return asyncGetPuzzleGeometry(id);\n    },\n  };\n  if (info?.inventedBy) {\n    puzzleLoader.inventedBy = info.inventedBy;\n  }\n  if (info?.inventionYear) {\n    puzzleLoader.inventionYear = info.inventionYear;\n  }\n  return puzzleLoader;\n}\n\nexport function cubePGPuzzleLoader(\n  id: string,\n  fullName: string,\n  info?: {\n    inventedBy?: string[];\n    inventionYear?: number;\n  },\n): PuzzleLoader {\n  const puzzleLoader: PuzzleLoader = genericPGPuzzleLoader(id, fullName, info);\n  puzzleLoader.appearance = cubeAppearance.bind(cubeAppearance, puzzleLoader);\n  puzzleLoader.stickerings = cubeStickerings;\n  return puzzleLoader;\n}\n","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import { ExperimentalStickering } from \"../../twisty\";\nimport { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  PuzzleAppearance,\n  PuzzleStickering,\n  StickeringManager,\n  PieceSet,\n  PieceStickering,\n} from \"./appearance\";\n\n// TODO: cache calculations?\nexport async function cubeAppearance(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<PuzzleAppearance> {\n  const def = await puzzleLoader.def();\n  const puzzleStickering = new PuzzleStickering(def);\n  const m = new StickeringManager(def);\n\n  const LL = (): PieceSet => m.move(\"U\");\n  const orUD = (): PieceSet => m.or(m.moves([\"U\", \"D\"]));\n  const E = (): PieceSet => m.not(orUD());\n  const orLR = (): PieceSet => m.or(m.moves([\"L\", \"R\"]));\n  const M = (): PieceSet => m.not(orLR());\n  const orFB = (): PieceSet => m.or(m.moves([\"F\", \"B\"]));\n  const S = (): PieceSet => m.not(orFB());\n\n  const F2L = (): PieceSet => m.not(LL());\n\n  const centerU = (): PieceSet => m.and([LL(), M(), S()]);\n\n  const edgeFR = (): PieceSet =>\n    m.and([m.and(m.moves([\"F\", \"R\"])), m.not(orUD())]);\n  const cornerDFR = (): PieceSet => m.and(m.moves([\"D\", \"R\", \"F\"]));\n  const slotFR = (): PieceSet => m.or([cornerDFR(), edgeFR()]);\n\n  const CENTERS = (): PieceSet =>\n    m.or([m.and([M(), E()]), m.and([M(), S()]), m.and([E(), S()])]);\n  const EDGES = (): PieceSet =>\n    m.or([\n      m.and([M(), orUD(), orFB()]),\n      m.and([E(), orLR(), orFB()]),\n      m.and([S(), orUD(), orLR()]),\n    ]);\n  const CORNERS = (): PieceSet => m.not(m.or([CENTERS(), EDGES()]));\n  const L6E = (): PieceSet => m.or([M(), m.and([LL(), EDGES()])]);\n\n  function dimF2L(): void {\n    puzzleStickering.set(F2L(), PieceStickering.Dim);\n  }\n\n  function setPLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.PermuteNonPrimary);\n    puzzleStickering.set(centerU(), PieceStickering.Dim); // TODO: why is this needed?\n  }\n\n  function setOLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.IgnoreNonPrimary);\n    puzzleStickering.set(centerU(), PieceStickering.Regular); // TODO: why is this needed?\n  }\n\n  function dimOLL(): void {\n    puzzleStickering.set(LL(), PieceStickering.Ignoriented);\n    puzzleStickering.set(centerU(), PieceStickering.Dim); // TODO: why is this needed?\n  }\n\n  switch (stickering) {\n    case \"full\":\n      break;\n    case \"PLL\":\n      dimF2L();\n      setPLL();\n      break;\n    case \"CLS\":\n      dimF2L();\n      puzzleStickering.set(\n        m.and(m.moves([\"D\", \"R\", \"F\"])),\n        PieceStickering.Regular,\n      );\n      puzzleStickering.set(LL(), PieceStickering.Ignoriented);\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    case \"OLL\":\n      dimF2L();\n      setOLL();\n      break;\n    case \"COLL\":\n      dimF2L();\n      setPLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    case \"OCLL\":\n      dimF2L();\n      dimOLL();\n      puzzleStickering.set(\n        m.and([LL(), CORNERS()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    case \"CLL\":\n      dimF2L();\n      puzzleStickering.set(\n        m.not(m.and([CORNERS(), LL()])),\n        PieceStickering.Dim,\n      );\n      break;\n    case \"ELL\":\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.Dim);\n      puzzleStickering.set(m.and([LL(), EDGES()]), PieceStickering.Regular);\n      break;\n    case \"ELS\":\n      dimF2L();\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      puzzleStickering.set(edgeFR(), PieceStickering.Regular);\n      puzzleStickering.set(cornerDFR(), PieceStickering.Ignored);\n      break;\n    case \"LL\":\n      dimF2L();\n      break;\n    case \"F2L\":\n      puzzleStickering.set(LL(), PieceStickering.Ignored);\n      break;\n    case \"ZBLL\":\n      dimF2L();\n      puzzleStickering.set(LL(), PieceStickering.PermuteNonPrimary);\n      puzzleStickering.set(centerU(), PieceStickering.Dim); // why is this needed?\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    case \"ZBLS\":\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      setOLL();\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Ignored);\n      break;\n    case \"WVLS\":\n    // fallthrough\n    case \"VLS\":\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      setOLL();\n      break;\n    case \"LS\":\n      dimF2L();\n      puzzleStickering.set(slotFR(), PieceStickering.Regular);\n      puzzleStickering.set(LL(), PieceStickering.Ignored);\n      puzzleStickering.set(centerU(), PieceStickering.Dim);\n      break;\n    case \"EO\":\n      puzzleStickering.set(CORNERS(), PieceStickering.Ignored);\n      puzzleStickering.set(\n        EDGES(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      break;\n    case \"CMLL\":\n      puzzleStickering.set(F2L(), PieceStickering.Dim);\n      puzzleStickering.set(L6E(), PieceStickering.Ignored);\n      puzzleStickering.set(m.and([LL(), CORNERS()]), PieceStickering.Regular);\n      break;\n    case \"L6E\":\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      break;\n    case \"L6EO\":\n      puzzleStickering.set(m.not(L6E()), PieceStickering.Dim);\n      puzzleStickering.set(\n        L6E(),\n        PieceStickering.OrientationWithoutPermutation,\n      );\n      puzzleStickering.set(\n        m.and([CENTERS(), orUD()]),\n        PieceStickering.OrientationStickers,\n      ); // TODO: why is this needed?\n      break;\n    case \"Daisy\":\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(CENTERS(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), CENTERS()]),\n        PieceStickering.Regular,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"U\"), EDGES()]),\n        PieceStickering.IgnoreNonPrimary,\n      );\n      break;\n    case \"Cross\":\n      puzzleStickering.set(m.all(), PieceStickering.Ignored);\n      puzzleStickering.set(CENTERS(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), CENTERS()]),\n        PieceStickering.Regular,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"D\"), EDGES()]),\n        PieceStickering.Regular,\n      );\n      break;\n    case \"2x2x2\":\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"F\", \"R\"])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.and([m.or(m.moves([\"U\", \"F\", \"R\"])), CENTERS()]),\n        PieceStickering.Dim,\n      );\n      break;\n    case \"2x2x3\":\n      puzzleStickering.set(m.all(), PieceStickering.Dim);\n      puzzleStickering.set(\n        m.or(m.moves([\"U\", \"F\", \"R\"])),\n        PieceStickering.Ignored,\n      );\n      puzzleStickering.set(\n        m.and([m.or(m.moves([\"U\", \"F\", \"R\"])), CENTERS()]),\n        PieceStickering.Dim,\n      );\n      puzzleStickering.set(\n        m.and([m.move(\"F\"), m.not(m.or(m.moves([\"U\", \"R\"])))]),\n        PieceStickering.Regular,\n      );\n      break;\n    case \"Void Cube\":\n      puzzleStickering.set(CENTERS(), PieceStickering.Invisible);\n      break;\n    case \"picture\":\n    // fallthrough\n    case \"invisible\":\n      puzzleStickering.set(m.all(), PieceStickering.Invisible);\n      break;\n    case \"centers-only\":\n      puzzleStickering.set(m.not(CENTERS()), PieceStickering.Ignored);\n      break;\n    default:\n      console.warn(\n        `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n      );\n      puzzleStickering.set(m.and(m.moves([])), PieceStickering.Dim);\n  }\n  return puzzleStickering.toAppearance();\n}\n\nexport async function cubeStickerings(): Promise<ExperimentalStickering[]> {\n  return [\n    \"full\",\n    \"PLL\",\n    \"CLS\",\n    \"OLL\",\n    \"COLL\",\n    \"OCLL\",\n    \"ELL\",\n    \"ELS\",\n    \"LL\",\n    \"F2L\",\n    \"ZBLL\",\n    \"ZBLS\",\n    \"WVLS\",\n    \"VLS\",\n    \"LS\",\n    \"EO\",\n    \"CMLL\",\n    \"L6E\",\n    \"L6EO\",\n    \"Daisy\",\n    \"Cross\",\n    \"2x2x2\",\n    \"2x2x3\",\n    \"Void Cube\",\n    \"picture\",\n    \"invisible\",\n    \"centers-only\",\n  ];\n}\n","// TODO: figure out where to house this permanently.\n\nimport { Move } from \"../../alg\";\nimport { experimentalIs } from \"../../alg\";\nimport { KPuzzleDefinition, transformationForMove } from \"../../kpuzzle\";\n\nexport type FaceletMeshAppearance =\n  | \"regular\"\n  | \"dim\"\n  | \"oriented\"\n  | \"ignored\"\n  | \"invisible\";\n\nexport type FaceletAppearance = {\n  appearance: FaceletMeshAppearance;\n  hintAppearance?: FaceletMeshAppearance;\n};\n\nexport type PieceAppearance = {\n  // TODO: foundation?\n  facelets: (FaceletMeshAppearance | FaceletAppearance | null)[];\n};\n\nexport type OrbitAppearance = {\n  pieces: (PieceAppearance | null)[];\n};\n\nexport type PuzzleAppearance = {\n  name?: string; // TODO\n  orbits: Record<string, OrbitAppearance>;\n};\n\nexport function getFaceletAppearance(\n  appearance: PuzzleAppearance,\n  orbitName: string,\n  pieceIdx: number,\n  faceletIdx: number,\n  hint: boolean,\n): FaceletMeshAppearance {\n  const orbitAppearance = appearance.orbits[orbitName];\n  const pieceAppearance: PieceAppearance | null =\n    orbitAppearance.pieces[pieceIdx];\n  if (pieceAppearance === null) {\n    return regular;\n  }\n  const faceletAppearance: FaceletMeshAppearance | FaceletAppearance | null =\n    pieceAppearance.facelets[faceletIdx];\n  if (faceletAppearance === null) {\n    return regular;\n  }\n  if (typeof faceletAppearance === \"string\") {\n    return faceletAppearance;\n  }\n  if (hint) {\n    return faceletAppearance.hintAppearance ?? faceletAppearance.appearance;\n  }\n  return faceletAppearance.appearance;\n}\n\nexport enum PieceStickering {\n  Regular,\n  Dim,\n  Ignored,\n  OrientationStickers,\n  Invisible,\n  Ignoriented,\n  IgnoreNonPrimary,\n  PermuteNonPrimary,\n  OrientationWithoutPermutation,\n}\n\nexport class PieceAnnotation<T> {\n  stickerings: Map<string, T[]> = new Map();\n  constructor(def: KPuzzleDefinition, defaultValue: T) {\n    for (const [orbitName, orbitDef] of Object.entries(def.orbits)) {\n      this.stickerings.set(\n        orbitName,\n        new Array(orbitDef.numPieces).fill(defaultValue),\n      );\n    }\n  }\n}\n\nconst regular = \"regular\";\nconst ignored = \"ignored\";\nconst oriented = \"oriented\";\nconst invisible = \"invisible\";\nconst dim = \"dim\";\n\n// regular\nconst r: PieceAppearance = {\n  facelets: [regular, regular, regular, regular, regular],\n};\n\n// ignored\nconst i: PieceAppearance = {\n  facelets: [ignored, ignored, ignored, ignored, ignored],\n};\n\n// oriented stickers\nconst o: PieceAppearance = {\n  facelets: [oriented, oriented, oriented, oriented, oriented],\n};\n\n// invisible\nconst invisiblePiece: PieceAppearance = {\n  facelets: [invisible, invisible, invisible, invisible], // TODO: 4th entry is for void cube. Should be handled properly for all stickerings.\n};\n\n// \"OLL\"\nconst riiii: PieceAppearance = {\n  facelets: [regular, ignored, ignored, ignored, ignored],\n};\n\n// \"PLL\"\nconst drrrr: PieceAppearance = {\n  facelets: [dim, regular, regular, regular, regular],\n};\n\n// ignored\nconst d: PieceAppearance = {\n  facelets: [dim, dim, dim, dim, dim],\n};\n\n// \"OLL\"\nconst diiii: PieceAppearance = {\n  facelets: [dim, ignored, ignored, ignored, ignored],\n};\n\n// oriented\nconst oiiii: PieceAppearance = {\n  facelets: [oriented, ignored, ignored, ignored, ignored],\n};\n\nexport function getPieceAppearance(\n  pieceStickering: PieceStickering,\n): PieceAppearance {\n  switch (pieceStickering) {\n    case PieceStickering.Regular:\n      return r;\n    case PieceStickering.Dim:\n      return d;\n    case PieceStickering.Ignored:\n      return i;\n    case PieceStickering.OrientationStickers: // TODO: Hack for centers. This shouldn't be needed.\n      return o;\n    case PieceStickering.Invisible: // TODO: Hack for centers. This shouldn't be needed.\n      return invisiblePiece;\n    case PieceStickering.IgnoreNonPrimary:\n      return riiii;\n    case PieceStickering.PermuteNonPrimary:\n      return drrrr;\n    case PieceStickering.Ignoriented:\n      return diiii;\n    case PieceStickering.OrientationWithoutPermutation:\n      return oiiii;\n  }\n}\n\nexport class PuzzleStickering extends PieceAnnotation<PieceStickering> {\n  constructor(def: KPuzzleDefinition) {\n    super(def, PieceStickering.Regular);\n  }\n\n  set(pieceSet: PieceSet, pieceStickering: PieceStickering): PuzzleStickering {\n    for (const [orbitName, pieces] of this.stickerings.entries()) {\n      for (let i = 0; i < pieces.length; i++) {\n        if (pieceSet.stickerings.get(orbitName)![i]) {\n          pieces[i] = pieceStickering;\n        }\n      }\n    }\n    return this;\n  }\n\n  toAppearance(): PuzzleAppearance {\n    const appearance: PuzzleAppearance = { orbits: {} };\n    for (const [orbitName, pieceStickerings] of this.stickerings.entries()) {\n      const pieces: PieceAppearance[] = [];\n      const orbitAppearance: OrbitAppearance = {\n        pieces,\n      };\n      appearance.orbits[orbitName] = orbitAppearance;\n      for (const pieceStickering of pieceStickerings) {\n        pieces.push(getPieceAppearance(pieceStickering));\n      }\n    }\n    return appearance;\n  }\n}\n\nexport type PieceSet = PieceAnnotation<boolean>;\n\nexport class StickeringManager {\n  constructor(private def: KPuzzleDefinition) {}\n\n  and(pieceSets: PieceSet[]): PieceSet {\n    const newPieceSet = new PieceAnnotation<boolean>(this.def, false);\n    for (const [orbitName, orbitDef] of Object.entries(this.def.orbits)) {\n      pieceLoop: for (let i = 0; i < orbitDef.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitName)![i] = true;\n        for (const pieceSet of pieceSets) {\n          if (!pieceSet.stickerings.get(orbitName)![i]) {\n            newPieceSet.stickerings.get(orbitName)![i] = false;\n            continue pieceLoop;\n          }\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  or(pieceSets: PieceSet[]): PieceSet {\n    // TODO: unify impl with and?\n    const newPieceSet = new PieceAnnotation<boolean>(this.def, false);\n    for (const [orbitName, orbitDef] of Object.entries(this.def.orbits)) {\n      pieceLoop: for (let i = 0; i < orbitDef.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitName)![i] = false;\n        for (const pieceSet of pieceSets) {\n          if (pieceSet.stickerings.get(orbitName)![i]) {\n            newPieceSet.stickerings.get(orbitName)![i] = true;\n            continue pieceLoop;\n          }\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  not(pieceSet: PieceSet): PieceSet {\n    const newPieceSet = new PieceAnnotation<boolean>(this.def, false);\n    for (const [orbitName, orbitDef] of Object.entries(this.def.orbits)) {\n      for (let i = 0; i < orbitDef.numPieces; i++) {\n        newPieceSet.stickerings.get(orbitName)![i] = !pieceSet.stickerings.get(\n          orbitName,\n        )![i];\n      }\n    }\n    return newPieceSet;\n  }\n\n  all(): PieceSet {\n    return this.and(this.moves([])); // TODO: are the degenerate cases for and/or the wrong way around\n  }\n\n  move(moveSource: Move | string): PieceSet {\n    const transformation = transformationForMove(\n      this.def,\n      experimentalIs(moveSource, Move)\n        ? (moveSource as Move)\n        : Move.fromString(moveSource as string),\n    );\n    const newPieceSet = new PieceAnnotation<boolean>(this.def, false);\n    for (const [orbitName, orbitDef] of Object.entries(this.def.orbits)) {\n      for (let i = 0; i < orbitDef.numPieces; i++) {\n        if (\n          transformation[orbitName].permutation[i] !== i ||\n          transformation[orbitName].orientation[i] !== 0\n        ) {\n          newPieceSet.stickerings.get(orbitName)![i] = true;\n        }\n      }\n    }\n    return newPieceSet;\n  }\n\n  moves(moveSources: (Move | string)[]): PieceSet[] {\n    return moveSources.map((moveSource) => this.move(moveSource));\n  }\n\n  // orbits(orbitNames: string[]): PieceSet {\n  //   const pieceSet = new PieceAnnotation<boolean>(this.def, false);\n  //   for (const orbitName of orbitNames) {\n  //     pieceSet.stickerings.get(orbitName)!.fill(true);\n  //   }\n  //   return pieceSet;\n  // }\n\n  // trueCounts(pieceSet: PieceSet): Record<string, number> {\n  //   const counts: Record<string, number> = {};\n  //   for (const [orbitName, orbitDef] of Object.entries(this.def.orbits)) {\n  //     let count = 0;\n  //     for (let i = 0; i < orbitDef.numPieces; i++) {\n  //       if (pieceSet.stickerings.get(orbitName)![i]) {\n  //         count++;\n  //       }\n  //     }\n  //     counts[orbitName] = count;\n  //   }\n  //   return counts;\n  // }\n}\n","export {\n  KPuzzleDefinition,\n  OrbitTransformation,\n  Transformation,\n} from \"./definition_types\";\n\nexport { KPuzzle, transformationForMove } from \"./kpuzzle\";\n\nexport {\n  Canonicalizer,\n  SearchSequence,\n  CanonicalSequenceIterator,\n} from \"./canonicalize\";\n\nexport {\n  combineTransformations,\n  multiplyTransformations,\n  identityTransformation,\n  invertTransformation,\n  areTransformationsEquivalent,\n  areOrbitTransformationsEquivalent,\n  areStatesEquivalent,\n  transformationOrder,\n} from \"./transformations\";\n\nexport { parseKPuzzleDefinition } from \"./parser\";\n\nexport { KPuzzleSVGWrapper } from \"./svg\";\n\nexport { experimentalIs3x3x3Solved } from \"./puzzle-orientation\";\n\nexport { transformationForQuantumMove as experimentalTransformationForQuantumMove } from \"./kpuzzle\";\n","import { Alg, Move } from \"../alg\";\nimport { QuantumMove } from \"../alg/units/leaves/Move\";\nimport { KPuzzleDefinition, Transformation } from \"./definition_types\";\nimport { MoveNotation } from \"./move_notation\";\nimport {\n  combineTransformations,\n  identityTransformation,\n  multiplyTransformations,\n} from \"./transformations\";\n\n// TODO: Move other helpers into the definition.\nexport function transformationForQuantumMove(\n  def: KPuzzleDefinition,\n  quantumMove: QuantumMove,\n): Transformation {\n  const transformation = getNotationLayer(def).lookupMove(\n    new Move(quantumMove), // TODO\n  );\n  if (!transformation) {\n    throw new Error(\"Unknown move: \" + quantumMove.toString());\n  }\n  return transformation;\n}\n\n// TODO: Move other helpers into the definition.\nexport function transformationForMove(\n  def: KPuzzleDefinition,\n  move: Move,\n): Transformation {\n  const transformation = getNotationLayer(def).lookupMove(move);\n  if (!transformation) {\n    throw new Error(\"Unknown move: \" + move.toString());\n  }\n  return transformation;\n}\n\nexport function getNotationLayer(def: KPuzzleDefinition): MoveNotation {\n  if (!def.moveNotation) {\n    def.moveNotation = new KPuzzleMoveNotation(def);\n  }\n  return def.moveNotation;\n}\n\nclass KPuzzleMoveNotation implements MoveNotation {\n  private cache: { [key: string]: Transformation } = {};\n  constructor(public def: KPuzzleDefinition) {}\n\n  public lookupMove(move: Move): Transformation | undefined {\n    const key = move.toString();\n    let r: Transformation | undefined = this.cache[key];\n    if (r) {\n      return r;\n    }\n    const quantumKey = move.quantum.toString();\n    r = this.def.moves[quantumKey];\n    if (r) {\n      r = multiplyTransformations(this.def, r, move.effectiveAmount);\n      this.cache[key] = r;\n    }\n    return r;\n  }\n}\n\nexport class KPuzzle {\n  public state: Transformation;\n  constructor(public definition: KPuzzleDefinition) {\n    this.state = identityTransformation(definition);\n  }\n\n  public reset(): void {\n    this.state = identityTransformation(this.definition);\n  }\n\n  public serialize(): string {\n    let output = \"\";\n    for (const orbitName in this.definition.orbits) {\n      output += orbitName + \"\\n\";\n      output += this.state[orbitName].permutation.join(\" \") + \"\\n\";\n      output += this.state[orbitName].orientation.join(\" \") + \"\\n\";\n    }\n    output = output.slice(0, output.length - 1); // Trim last newline.\n    return output;\n  }\n\n  public applyMove(move: Move): void {\n    this.state = combineTransformations(\n      this.definition,\n      this.state,\n      transformationForMove(this.definition, move),\n    );\n  }\n\n  public applyAlg(alg: Alg): void {\n    // TODO: use indexer instead of full expansion.\n    for (const move of alg.experimentalLeafMoves()) {\n      this.applyMove(move);\n    }\n  }\n  // TODO: Implement\n  // parseState(): this {}\n\n  // TODO: Alg parsing\n\n  // TODO: Implement.\n  // invert(): this {}\n}\n","import {\n  KPuzzleDefinition,\n  OrbitTransformation,\n  Transformation,\n} from \"./definition_types\";\n\n// this is the last identity orbit transformation we saw or looked at.\nlet lasto: OrbitTransformation | null;\n\nfunction isIdentity(omod: number, o: OrbitTransformation): boolean {\n  if (o === lasto) {\n    return true;\n  }\n  const perm = o.permutation;\n  const n = perm.length;\n  for (let idx = 0; idx < n; idx++) {\n    if (perm[idx] !== idx) {\n      return false;\n    }\n  }\n  if (omod > 1) {\n    const ori = o.orientation;\n    for (let idx = 0; idx < n; idx++) {\n      if (ori[idx] !== 0) {\n        return false;\n      }\n    }\n  }\n  lasto = o;\n  return true;\n}\n\nexport function combineTransformations(\n  def: KPuzzleDefinition,\n  t1: Transformation,\n  t2: Transformation,\n): Transformation {\n  const newTrans: Transformation = {} as Transformation;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o1 = t1[orbitName];\n    const o2 = t2[orbitName];\n    if (isIdentity(oDef.orientations, o2)) {\n      // common case for big cubes\n      newTrans[orbitName] = o1;\n    } else if (isIdentity(oDef.orientations, o1)) {\n      newTrans[orbitName] = o2;\n    } else {\n      const newPerm = new Array(oDef.numPieces);\n      if (oDef.orientations === 1) {\n        for (let idx = 0; idx < oDef.numPieces; idx++) {\n          newPerm[idx] = o1.permutation[o2.permutation[idx]];\n        }\n        newTrans[orbitName] = {\n          permutation: newPerm,\n          orientation: o1.orientation,\n        };\n      } else {\n        const newOri = new Array(oDef.numPieces);\n        for (let idx = 0; idx < oDef.numPieces; idx++) {\n          newOri[idx] =\n            (o1.orientation[o2.permutation[idx]] + o2.orientation[idx]) %\n            oDef.orientations;\n          newPerm[idx] = o1.permutation[o2.permutation[idx]];\n        }\n        newTrans[orbitName] = { permutation: newPerm, orientation: newOri };\n      }\n    }\n  }\n  return newTrans;\n}\n\nexport function multiplyTransformations(\n  def: KPuzzleDefinition,\n  t: Transformation,\n  amount: number,\n): Transformation {\n  if (amount < 0) {\n    return multiplyTransformations(def, invertTransformation(def, t), -amount);\n  }\n  if (amount === 0) {\n    return identityTransformation(def);\n  }\n  if (amount === 1) {\n    return t;\n  }\n  let halfish = t;\n  if (amount !== 2) {\n    halfish = multiplyTransformations(def, t, Math.floor(amount / 2));\n  }\n  const twiceHalfish = combineTransformations(def, halfish, halfish);\n  if (amount % 2 === 0) {\n    return twiceHalfish;\n  } else {\n    return combineTransformations(def, t, twiceHalfish);\n  }\n}\nexport function identityTransformation(\n  definition: KPuzzleDefinition,\n): Transformation {\n  const transformation = {} as Transformation;\n  for (const orbitName in definition.orbits) {\n    const orbitDefinition = definition.orbits[orbitName];\n    if (!lasto || lasto.permutation.length !== orbitDefinition.numPieces) {\n      const newPermutation = new Array(orbitDefinition.numPieces);\n      const newOrientation = new Array(orbitDefinition.numPieces);\n      for (let i = 0; i < orbitDefinition.numPieces; i++) {\n        newPermutation[i] = i;\n        newOrientation[i] = 0;\n      }\n      const orbitTransformation = {\n        permutation: newPermutation,\n        orientation: newOrientation,\n      };\n      lasto = orbitTransformation;\n    }\n    transformation[orbitName] = lasto;\n  }\n  return transformation;\n}\n\nexport function invertTransformation(\n  def: KPuzzleDefinition,\n  t: Transformation,\n): Transformation {\n  const newTrans: Transformation = {} as Transformation;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o = t[orbitName];\n    if (isIdentity(oDef.orientations, o)) {\n      newTrans[orbitName] = o;\n    } else if (oDef.orientations === 1) {\n      const newPerm = new Array(oDef.numPieces);\n      for (let idx = 0; idx < oDef.numPieces; idx++) {\n        newPerm[o.permutation[idx]] = idx;\n      }\n      newTrans[orbitName] = {\n        permutation: newPerm,\n        orientation: o.orientation,\n      };\n    } else {\n      const newPerm = new Array(oDef.numPieces);\n      const newOri = new Array(oDef.numPieces);\n      for (let idx = 0; idx < oDef.numPieces; idx++) {\n        const fromIdx = o.permutation[idx] as number;\n        newPerm[fromIdx] = idx;\n        newOri[fromIdx] =\n          (oDef.orientations - o.orientation[idx] + oDef.orientations) %\n          oDef.orientations;\n      }\n      newTrans[orbitName] = { permutation: newPerm, orientation: newOri };\n    }\n  }\n  return newTrans;\n}\n\nfunction gcd(a: number, b: number): number {\n  if (b) {\n    return gcd(b, a % b);\n  }\n  return a;\n}\n\n/* calculate the order of a particular transformation. */\nexport function transformationOrder(\n  def: KPuzzleDefinition,\n  t: Transformation,\n): number {\n  let r: number = 1;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o = t[orbitName];\n    const d = new Array(oDef.numPieces);\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      if (!d[idx]) {\n        let w = idx;\n        let om = 0;\n        let pm = 0;\n        for (;;) {\n          d[w] = true;\n          om = om + o.orientation[w];\n          pm = pm + 1;\n          w = o.permutation[w];\n          if (w === idx) {\n            break;\n          }\n        }\n        if (om !== 0) {\n          pm = (pm * oDef.orientations) / gcd(oDef.orientations, om);\n        }\n        r = (r * pm) / gcd(r, pm);\n      }\n    }\n  }\n  return r;\n}\n\nexport function areOrbitTransformationsEquivalent(\n  def: KPuzzleDefinition,\n  orbitName: string,\n  t1: Transformation,\n  t2: Transformation,\n  options: {\n    ignoreOrientation?: boolean;\n    ignorePermutation?: boolean;\n  } = {},\n): boolean {\n  const oDef = def.orbits[orbitName];\n  const o1 = t1[orbitName];\n  const o2 = t2[orbitName];\n  for (let idx = 0; idx < oDef.numPieces; idx++) {\n    if (\n      !options?.ignoreOrientation &&\n      o1.orientation[idx] !== o2.orientation[idx]\n    ) {\n      return false;\n    }\n    if (\n      !options?.ignorePermutation &&\n      o1.permutation[idx] !== o2.permutation[idx]\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function areTransformationsEquivalent(\n  def: KPuzzleDefinition,\n  t1: Transformation,\n  t2: Transformation,\n): boolean {\n  for (const orbitName in def.orbits) {\n    if (!areOrbitTransformationsEquivalent(def, orbitName, t1, t2)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function areStatesEquivalent(\n  def: KPuzzleDefinition,\n  t1: Transformation,\n  t2: Transformation,\n): boolean {\n  // Turn transformations into states.\n  // This accounts for indistinguishable pieces.\n  return areTransformationsEquivalent(\n    def,\n    combineTransformations(def, def.startPieces, t1),\n    combineTransformations(def, def.startPieces, t2),\n  );\n}\n","/**\n *  This module manages canonical sequences.  You can merge sequences\n *  combining moves (fully respecting commuting moves), and you can\n *  generate canonical sequences efficiently.\n */\nimport { Alg, Move } from \"../alg\";\nimport { KPuzzleDefinition, Transformation } from \"./definition_types\";\nimport {\n  areTransformationsEquivalent,\n  combineTransformations,\n  identityTransformation,\n} from \"./transformations\";\n\nclass InternalMove {\n  constructor(public base: number, public twist: number) {}\n  public getTransformation(canon: Canonicalizer): Transformation {\n    return canon.transforms[this.base][this.twist];\n  }\n\n  public asString(canon: Canonicalizer): string {\n    const mod = canon.moveorder[this.base];\n    let tw = this.twist % mod;\n    while (tw + tw > mod) {\n      tw -= mod;\n    }\n    while (tw + tw <= -mod) {\n      tw += mod;\n    }\n    const nam = canon.movenames[this.base];\n    if (tw === 1) {\n      return nam;\n    } else if (tw === -1) {\n      return nam + \"'\";\n    } else if (tw > 0) {\n      return nam + tw;\n    } else if (tw < 0) {\n      return nam + -tw + \"'\";\n    } else {\n      throw new Error(\"Stringifying null move?\");\n    }\n  }\n}\n\n// represents puzzle move data and its commuting structure\nexport class Canonicalizer {\n  public commutes: boolean[][] = [];\n  public moveorder: number[] = [];\n  public movenames: string[] = [];\n  public transforms: Transformation[][] = [];\n  public moveindex: { [key: string]: number } = {};\n  public baseMoveCount: number;\n  constructor(public def: KPuzzleDefinition) {\n    const basemoves = def.moves;\n    const id = identityTransformation(def);\n    for (const mv1 in basemoves) {\n      this.moveindex[mv1] = this.movenames.length;\n      this.movenames.push(mv1);\n      this.transforms.push([id, basemoves[mv1]]);\n    }\n    this.baseMoveCount = this.movenames.length;\n    for (let i = 0; i < this.baseMoveCount; i++) {\n      this.commutes.push([]);\n      const t1 = this.transforms[i][1];\n      for (let j = 0; j < this.baseMoveCount; j++) {\n        const t2 = this.transforms[j][1];\n        const ab = combineTransformations(def, t1, t2);\n        const ba = combineTransformations(def, t2, t1);\n        this.commutes[i][j] = areTransformationsEquivalent(def, ab, ba);\n      }\n    }\n    for (let i = 0; i < this.baseMoveCount; i++) {\n      const t1 = this.transforms[i][1];\n      let ct = t1;\n      let order = 1;\n      for (let mult = 2; !areTransformationsEquivalent(def, id, ct); mult++) {\n        order++;\n        ct = combineTransformations(def, ct, t1);\n        this.transforms[i].push(ct);\n      }\n      this.moveorder[i] = order;\n    }\n  }\n\n  public blockMoveToInternalMove(move: Move): InternalMove {\n    const quantumMoveStr = move.quantum.toString();\n    if (!(quantumMoveStr in this.def.moves)) {\n      throw new Error(\"! move \" + quantumMoveStr + \" not in def.\");\n    }\n    const ind = this.moveindex[quantumMoveStr];\n    const mod = this.moveorder[ind];\n    let tw = move.effectiveAmount % mod; // TODO\n    if (tw < 0) {\n      tw = (tw + mod) % mod;\n    }\n    return new InternalMove(ind, tw);\n  }\n\n  // Sequence must be simple sequence of block moves\n  // this one does not attempt to merge.\n  public sequenceToSearchSequence(\n    alg: Alg,\n    tr?: Transformation,\n  ): SearchSequence {\n    const ss = new SearchSequence(this, tr);\n    for (const move of alg.experimentalLeafMoves()) {\n      ss.appendOneMove(this.blockMoveToInternalMove(move as Move));\n    }\n    return ss;\n  }\n\n  // Sequence to simple sequence, with merging.\n  public mergeSequenceToSearchSequence(\n    alg: Alg,\n    tr?: Transformation,\n  ): SearchSequence {\n    const ss = new SearchSequence(this, tr);\n    for (const move of alg.experimentalLeafMoves()) {\n      ss.mergeOneMove(this.blockMoveToInternalMove(move));\n    }\n    return ss;\n  }\n}\n\n// represents a single sequence we are working on\n// this can be a search sequence, or it can be a\n// \"cooked\" sequence that we want to use efficiently.\nexport class SearchSequence {\n  public moveseq: InternalMove[] = [];\n  public trans: Transformation;\n  constructor(private canon: Canonicalizer, tr?: Transformation) {\n    if (tr) {\n      this.trans = tr;\n    } else {\n      this.trans = identityTransformation(canon.def);\n    }\n  }\n\n  /*\n   *  A common use for search sequences is to extend them, but\n   *  sometimes we shouldn't modify the returned one.  This\n   *  method gives you a copy you can do whatever you want with.\n   */\n  public clone(): SearchSequence {\n    const r = new SearchSequence(this.canon, this.trans);\n    r.moveseq = [...this.moveseq];\n    return r;\n  }\n\n  // returns 1 if the move is added, 0 if it is merged, -1 if it cancels a move\n  public mergeOneMove(mv: InternalMove): number {\n    const r = this.onlyMergeOneMove(mv);\n    this.trans = combineTransformations(\n      this.canon.def,\n      this.trans,\n      mv.getTransformation(this.canon),\n    );\n    return r;\n  }\n\n  // does not do merge work; just slaps the new move on\n  public appendOneMove(mv: InternalMove): number {\n    this.moveseq.push(mv);\n    this.trans = combineTransformations(\n      this.canon.def,\n      this.trans,\n      mv.getTransformation(this.canon),\n    );\n    return 1;\n  }\n\n  // pop a move off.\n  public popMove(): number {\n    const mv = this.moveseq.pop();\n    if (!mv) {\n      throw new Error(\"Can't pop an empty sequence\");\n    }\n    this.trans = combineTransformations(\n      this.canon.def,\n      this.trans,\n      this.canon.transforms[mv.base][this.canon.moveorder[mv.base] - mv.twist],\n    );\n    return 1;\n  }\n\n  // do one more twist of the last move\n  public oneMoreTwist(): number {\n    const lastmv = this.moveseq[this.moveseq.length - 1];\n    this.trans = combineTransformations(\n      this.canon.def,\n      this.trans,\n      this.canon.transforms[lastmv.base][1],\n    );\n    this.moveseq[this.moveseq.length - 1] = new InternalMove(\n      lastmv.base,\n      lastmv.twist + 1,\n    );\n    return 0;\n  }\n\n  private onlyMergeOneMove(mv: InternalMove): number {\n    let j = this.moveseq.length - 1;\n    while (j >= 0) {\n      if (mv.base === this.moveseq[j].base) {\n        const mo = this.canon.moveorder[mv.base];\n        let twist = (mv.twist + this.moveseq[j].twist) % mo;\n        if (twist < 0) {\n          twist = (twist + mo) % mo;\n        }\n        if (twist === 0) {\n          // this splice should not be a performance problem because the\n          // typical number of following moves should be small\n          this.moveseq.splice(j, 1);\n          return -1;\n        } else {\n          this.moveseq[j] = new InternalMove(mv.base, twist);\n          return 0;\n        }\n      } else if (this.canon.commutes[mv.base][this.moveseq[j].base]) {\n        j--;\n      } else {\n        break;\n      }\n    }\n    this.moveseq.push(mv);\n    return 1;\n  }\n\n  // returns the length of the merged sequence.\n  public mergeSequence(seq: SearchSequence): number {\n    let r = this.moveseq.length;\n    for (let i = 0; i < seq.moveseq.length; i++) {\n      const mv = seq.moveseq[i];\n      const d = this.onlyMergeOneMove(mv);\n      r += d;\n    }\n    this.trans = combineTransformations(this.canon.def, this.trans, seq.trans);\n    return r;\n  }\n\n  public getSequenceAsString(): string {\n    const r: string[] = [];\n    for (const mv of this.moveseq) {\n      r.push(mv.asString(this.canon));\n    }\n    return r.join(\" \");\n  }\n}\n\n/*\n *   Iterate through canonical sequences by length.  This version\n *   uses generators.\n */\nexport class CanonicalSequenceIterator {\n  public ss: SearchSequence;\n  public targetLength: number;\n  constructor(public canon: Canonicalizer, state?: Transformation) {\n    this.ss = new SearchSequence(canon, state);\n    this.targetLength = 0;\n  }\n\n  public nextState(base: number, canonstate: number[]): null | number[] {\n    const newstate: number[] = [];\n    for (const prevbase of canonstate) {\n      if (prevbase === base) {\n        return null;\n      } else if (!this.canon.commutes[prevbase][base]) {\n        // don't do anything in this case\n      } else if (base < prevbase) {\n        return null;\n      } else {\n        newstate.push(prevbase);\n      }\n    }\n    return newstate;\n  }\n\n  public *genSequence(\n    togo: number,\n    canonstate: number[],\n  ): Generator<SearchSequence, null, void> {\n    if (togo === 0) {\n      yield this.ss;\n    } else {\n      for (let base = 0; base < this.canon.baseMoveCount; base++) {\n        const newstate = this.nextState(base, canonstate);\n        if (newstate) {\n          newstate.push(base);\n          for (let tw = 1; tw < this.canon.moveorder[base]; tw++) {\n            this.ss.appendOneMove(new InternalMove(base, tw));\n            yield* this.genSequence(togo - 1, newstate);\n            this.ss.popMove();\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  public *generator(): Generator<SearchSequence, SearchSequence, void> {\n    for (let d = 0; ; d++) {\n      yield* this.genSequence(d, []);\n    }\n  }\n\n  public *genSequenceTree(\n    canonstate: number[],\n  ): Generator<SearchSequence, null, number> {\n    const r = yield this.ss;\n    if (r > 0) {\n      return null;\n    }\n    for (let base = 0; base < this.canon.baseMoveCount; base++) {\n      const newstate = this.nextState(base, canonstate);\n      if (newstate) {\n        newstate.push(base);\n        for (let tw = 1; tw < this.canon.moveorder[base]; tw++) {\n          this.ss.appendOneMove(new InternalMove(base, tw));\n          yield* this.genSequenceTree(newstate);\n          this.ss.popMove();\n        }\n      }\n    }\n    return null;\n  }\n}\n","export { pegParseKPuzzleDefinition as parseKPuzzleDefinition } from \"./parser-shim\";\n","// Note: this file exists so that `parse` doesn't show up for autocompletion (by\n// avoiding a `parser-pegjs.d.ts` file that exports `parse`.)\n\nimport { KPuzzleDefinition } from \"../definition_types\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { parse } from \"./parser-pegjs\";\n\nconst pegParseKPuzzleDefinition: (s: string) => KPuzzleDefinition = parse;\n\nexport { pegParseKPuzzleDefinition };\n","// Generated by PEG.js v0.11.0-master.f69239d, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() {\n    this.constructor = child;\n  }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function (expectation) {\n      return '\"' + literalEscape(expectation.text) + '\"';\n    },\n\n    class: function (expectation) {\n      var escapedParts = expectation.parts.map(function (part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function () {\n      return \"any character\";\n    },\n\n    end: function () {\n      return \"end of input\";\n    },\n\n    other: function (expectation) {\n      return expectation.description;\n    },\n\n    not: function (expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    },\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g, '\\\\\"')\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g, \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g, function (ch) {\n        return \"\\\\x0\" + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return \"\\\\x\" + hex(ch);\n      });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return (\n          descriptions.slice(0, -1).join(\", \") +\n          \", or \" +\n          descriptions[descriptions.length - 1]\n        );\n    }\n  }\n\n  function describeFound(found) {\n    return found ? '\"' + literalEscape(found) + '\"' : \"end of input\";\n  }\n\n  return (\n    \"Expected \" +\n    describeExpected(expected) +\n    \" but \" +\n    describeFound(found) +\n    \" found.\"\n  );\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { start: peg$parsestart };\n  var peg$startRuleFunction = peg$parsestart;\n\n  var peg$c0 = \" \";\n  var peg$c1 = \"Name\";\n  var peg$c2 = \"Set\";\n  var peg$c3 = \"\\n\";\n  var peg$c4 = \"Solved\";\n  var peg$c5 = \"End\";\n  var peg$c6 = \"Move\";\n\n  var peg$r0 = /^[A-Za-z0-9<>]/;\n  var peg$r1 = /^[A-Za-z]/;\n  var peg$r2 = /^[A-Za-z0-9]/;\n  var peg$r3 = /^[0-9]/;\n\n  var peg$e0 = peg$classExpectation(\n    [[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"<\", \">\"],\n    false,\n    false,\n  );\n  var peg$e1 = peg$classExpectation(\n    [\n      [\"A\", \"Z\"],\n      [\"a\", \"z\"],\n    ],\n    false,\n    false,\n  );\n  var peg$e2 = peg$classExpectation(\n    [\n      [\"A\", \"Z\"],\n      [\"a\", \"z\"],\n      [\"0\", \"9\"],\n    ],\n    false,\n    false,\n  );\n  var peg$e3 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e4 = peg$literalExpectation(\" \", false);\n  var peg$e5 = peg$literalExpectation(\"Name\", false);\n  var peg$e6 = peg$literalExpectation(\"Set\", false);\n  var peg$e7 = peg$literalExpectation(\"\\n\", false);\n  var peg$e8 = peg$literalExpectation(\"Solved\", false);\n  var peg$e9 = peg$literalExpectation(\"End\", false);\n  var peg$e10 = peg$literalExpectation(\"Move\", false);\n\n  var peg$f0 = function (def) {\n    return fixMoves(def);\n  };\n  var peg$f1 = function (characters) {\n    return characters.join(\"\");\n  };\n  var peg$f2 = function (first, rest) {\n    return [first].concat(rest).join(\"\");\n  };\n  var peg$f3 = function (characters) {\n    return parseInt(characters.join(\"\"), 10);\n  };\n  var peg$f4 = function (identifier) {\n    return identifier;\n  };\n  var peg$f5 = function (set_identifier, num_pieces, num_orientations) {\n    return [\n      set_identifier,\n      { numPieces: num_pieces, orientations: num_orientations },\n    ];\n  };\n  var peg$f6 = function (orbit, orbits) {\n    orbits[orbit[0]] = orbit[1];\n    return orbits;\n  };\n  var peg$f7 = function (orbit) {\n    const orbits = {};\n    orbits[orbit[0]] = orbit[1];\n    return orbits;\n  };\n  var peg$f8 = function (num, nums) {\n    return [num].concat(nums);\n  };\n  var peg$f9 = function (num) {\n    return [num];\n  };\n  var peg$f10 = function (nums) {\n    return fixPermutation(nums);\n  };\n  var peg$f11 = function (set_identifier, permutation, nums) {\n    return [set_identifier, { permutation: permutation, orientation: nums }];\n  };\n  var peg$f12 = function (set_identifier, permutation) {\n    return [\n      set_identifier,\n      {\n        permutation: permutation,\n        orientation: new Array(permutation.length).fill(0),\n      },\n    ];\n  };\n  var peg$f13 = function (definition, definitions) {\n    definitions[definition[0]] = definition[1];\n    return definitions;\n  };\n  var peg$f14 = function (definition) {\n    const definitions = {};\n    definitions[definition[0]] = definition[1];\n    return definitions;\n  };\n  var peg$f15 = function (definitions) {\n    return definitions;\n  };\n  var peg$f16 = function (identifier, definitions) {\n    return [identifier, definitions];\n  };\n  var peg$f17 = function (move, moves) {\n    moves[move[0]] = move[1];\n    return moves;\n  };\n  var peg$f18 = function (move) {\n    const moves = {};\n    moves[move[0]] = move[1];\n    return moves;\n  };\n  var peg$f19 = function (name, orbits, start_pieces, moves) {\n    return {\n      name: name,\n      orbits: orbits,\n      moves: moves,\n      startPieces: start_pieces,\n    };\n  };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\n        \"Can't start parsing from rule \\\"\" + options.startRule + '\".',\n      );\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location =\n      location !== undefined\n        ? location\n        : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location,\n    );\n  }\n\n  function error(message, location) {\n    location =\n      location !== undefined\n        ? location\n        : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: \"class\",\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase,\n    };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column,\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME =\n    typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if (peg$VALIDFILENAME) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column,\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column,\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) {\n      return;\n    }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) {\n      return;\n    }\n\n    if (invert) {\n      variants = variants.map(function (e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location,\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos),\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseDEFINITION_FILE();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIDENTIFIER() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = [];\n    rule$expects(peg$e0);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        rule$expects(peg$e0);\n        if (peg$r0.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f1(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSET_IDENTIFIER() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    rule$expects(peg$e1);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      rule$expects(peg$e2);\n      if (peg$r2.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        rule$expects(peg$e2);\n        if (peg$r2.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f2(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNUMBER() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = [];\n    rule$expects(peg$e3);\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        rule$expects(peg$e3);\n        if (peg$r3.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSPACE() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNAME() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    rule$expects(peg$e5);\n    if (input.substr(peg$currPos, 4) === peg$c1) {\n      s1 = peg$c1;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIDENTIFIER();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f4(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseORBIT() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSET_IDENTIFIER();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseSPACE();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNUMBER();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseSPACE();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseNUMBER();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f5(s3, s5, s7);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseORBITS() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseORBIT();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNEWLINE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseORBITS();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f6(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseORBIT();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f7(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNEWLINE() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    rule$expects(peg$e7);\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c3;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNEWLINES() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = [];\n    rule$expects(peg$e7);\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        rule$expects(peg$e7);\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s1 = peg$c3;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOPTIONAL_NEWLINES() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = [];\n    rule$expects(peg$e7);\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      rule$expects(peg$e7);\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s1 = peg$c3;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNUMBERS() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseNUMBER();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNUMBERS();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f8(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseNUMBER();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f9(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePERMUTATION() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseNUMBERS();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f10(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDEFINITION() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseSET_IDENTIFIER();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNEWLINE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePERMUTATION();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseNEWLINE();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNUMBERS();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f11(s1, s3, s5);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseSET_IDENTIFIER();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNEWLINE();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsePERMUTATION();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f12(s1, s3);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDEFINITIONS() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseDEFINITION();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNEWLINE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDEFINITIONS();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f13(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseDEFINITION();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSTART_PIECES() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    rule$expects(peg$e8);\n    if (input.substr(peg$currPos, 6) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNEWLINE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDEFINITIONS();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseNEWLINE();\n          if (s4 !== peg$FAILED) {\n            rule$expects(peg$e9);\n            if (input.substr(peg$currPos, 3) === peg$c5) {\n              s5 = peg$c5;\n              peg$currPos += 3;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f15(s3);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMOVE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    rule$expects(peg$e10);\n    if (input.substr(peg$currPos, 4) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIDENTIFIER();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseNEWLINE();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDEFINITIONS();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseNEWLINE();\n              if (s6 !== peg$FAILED) {\n                rule$expects(peg$e9);\n                if (input.substr(peg$currPos, 3) === peg$c5) {\n                  s7 = peg$c5;\n                  peg$currPos += 3;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f16(s3, s5);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMOVES() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseMOVE();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNEWLINES();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseMOVES();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f17(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseMOVE();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f18(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDEFINITION_FILE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    };\n\n    s0 = peg$currPos;\n    s1 = peg$parseNAME();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNEWLINES();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseORBITS();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseNEWLINES();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseSTART_PIECES();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseNEWLINES();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseMOVES();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseOPTIONAL_NEWLINES();\n                  peg$savedPos = s0;\n                  s0 = peg$f19(s1, s3, s5, s7);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function fixPermutation(permutation) {\n    return permutation.map((x) => x - 1);\n  }\n\n  function fixMoves(def) {\n    for (const moveName in def.moves) {\n      const move = def.moves[moveName];\n      for (const orbitName in def.orbits) {\n        const moveOrbit = move[orbitName];\n        const oldOrientation = moveOrbit.orientation;\n        const perm = moveOrbit.permutation;\n        const newOrientation = new Array(oldOrientation.length);\n        for (let i = 0; i < perm.length; i++) {\n          newOrientation[i] = oldOrientation[perm[i]];\n        }\n        moveOrbit.orientation = newOrientation;\n      }\n    }\n    return def;\n  }\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse,\n};\n","import type {\n  FaceletMeshAppearance,\n  PuzzleAppearance,\n} from \"../puzzles/stickerings/appearance\"; // TODO\nimport { KPuzzleDefinition, Transformation } from \"./definition_types\";\nimport { KPuzzle } from \"./kpuzzle\";\n\nconst xmlns = \"http://www.w3.org/2000/svg\";\n\n// Unique ID mechanism to keep SVG gradient element IDs unique. TODO: Is there\n// something more performant, and that can't be broken by other elements of the\n// page? (And also doesn't break if this library is run in parallel.)\nlet svgCounter = 0;\nfunction nextSVGID(): string {\n  svgCounter += 1;\n  return \"svg\" + svgCounter.toString();\n}\n\n// TODO: This is hardcoded to 3x3x3 SVGs\nconst colorMaps: Partial<\n  Record<FaceletMeshAppearance, Record<string, string>>\n> = {\n  dim: {\n    \"white\": \"#dddddd\",\n    \"orange\": \"#884400\",\n    \"limegreen\": \"#008800\",\n    \"red\": \"#660000\",\n    \"rgb(34, 102, 255)\": \"#000088\", // TODO\n    \"yellow\": \"#888800\",\n  },\n  oriented: {\n    \"white\": \"#ff88ff\",\n    \"orange\": \"#ff88ff\",\n    \"limegreen\": \"#ff88ff\",\n    \"red\": \"#ff88ff\",\n    \"rgb(34, 102, 255)\": \"#ff88ff\", // TODO\n    \"yellow\": \"#ff88ff\",\n  },\n  ignored: {\n    \"white\": \"#444444\",\n    \"orange\": \"#444444\",\n    \"limegreen\": \"#444444\",\n    \"red\": \"#444444\",\n    \"rgb(34, 102, 255)\": \"#444444\", // TODO\n    \"yellow\": \"#444444\",\n  },\n  invisible: {\n    \"white\": \"#00000000\",\n    \"orange\": \"#00000000\",\n    \"limegreen\": \"#00000000\",\n    \"red\": \"#00000000\",\n    \"rgb(34, 102, 255)\": \"#00000000\", // TODO\n    \"yellow\": \"#00000000\",\n  },\n};\n\nexport class KPuzzleSVGWrapper {\n  public element: HTMLElement;\n  public gradientDefs: SVGDefsElement;\n  private originalColors: { [type: string]: string } = {};\n  private gradients: { [type: string]: SVGGradientElement } = {};\n  private svgID: string;\n  constructor(\n    public kPuzzleDefinition: KPuzzleDefinition,\n    svgSource: string,\n    experimentalAppearance?: PuzzleAppearance,\n  ) {\n    if (!svgSource) {\n      throw new Error(\n        `No SVG definition for puzzle type: ${kPuzzleDefinition.name}`,\n      );\n    }\n\n    this.svgID = nextSVGID();\n\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"svg-wrapper\");\n    // TODO: Sanitization.\n    this.element.innerHTML = svgSource;\n\n    const svgElem = this.element.querySelector(\"svg\");\n    if (!svgElem) {\n      throw new Error(\"Could not get SVG element\");\n    }\n    if (xmlns !== svgElem.namespaceURI) {\n      throw new Error(\"Unexpected XML namespace\");\n    }\n    svgElem.style.maxWidth = \"100%\";\n    svgElem.style.maxHeight = \"100%\";\n    this.gradientDefs = document.createElementNS(\n      xmlns,\n      \"defs\",\n    ) as SVGDefsElement;\n    svgElem.insertBefore(this.gradientDefs, svgElem.firstChild);\n\n    for (const orbitName in kPuzzleDefinition.orbits) {\n      const orbitDefinition = kPuzzleDefinition.orbits[orbitName];\n\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (\n          let orientation = 0;\n          orientation < orbitDefinition.orientations;\n          orientation++\n        ) {\n          const id = this.elementID(orbitName, idx, orientation);\n          const elem = this.elementByID(id);\n          let originalColor: string = elem.style.fill;\n          /// TODO: Allow setting appearance dynamically.\n          if (experimentalAppearance) {\n            (() => {\n              // TODO: dedup with Cube3D,,factor out fallback calculations\n              const a = experimentalAppearance.orbits;\n              if (!a) {\n                return;\n              }\n              const orbitAppearance = a[orbitName];\n              if (!orbitAppearance) {\n                return;\n              }\n              const pieceAppearance = orbitAppearance.pieces[idx];\n              if (!pieceAppearance) {\n                return;\n              }\n              const faceletAppearance = pieceAppearance.facelets[orientation];\n              if (!faceletAppearance) {\n                return;\n              }\n              const appearance =\n                typeof faceletAppearance === \"string\"\n                  ? faceletAppearance\n                  : faceletAppearance?.appearance;\n              const colorMap = colorMaps[appearance];\n              if (colorMap) {\n                originalColor = colorMap[originalColor];\n              }\n            })();\n          } else {\n            originalColor = elem.style.fill as string;\n          }\n          this.originalColors[id] = originalColor;\n          this.gradients[id] = this.newGradient(id, originalColor);\n          this.gradientDefs.appendChild(this.gradients[id]);\n          elem.setAttribute(\"style\", `fill: url(#grad-${this.svgID}-${id})`);\n        }\n      }\n    }\n  }\n\n  public drawKPuzzle(\n    kpuzzle: KPuzzle,\n    nextState?: Transformation,\n    fraction?: number,\n  ): void {\n    this.draw(kpuzzle.definition, kpuzzle.state, nextState, fraction);\n  }\n\n  // TODO: save definition in the constructor?\n  public draw(\n    definition: KPuzzleDefinition,\n    state: Transformation,\n    nextState?: Transformation,\n    fraction?: number,\n  ): void {\n    for (const orbitName in definition.orbits) {\n      const orbitDefinition = definition.orbits[orbitName];\n\n      const curOrbitState = state[orbitName];\n      const nextOrbitState = nextState\n        ? (nextState as Transformation)[orbitName]\n        : null;\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (\n          let orientation = 0;\n          orientation < orbitDefinition.orientations;\n          orientation++\n        ) {\n          const id = this.elementID(orbitName, idx, orientation);\n          const fromCur = this.elementID(\n            orbitName,\n            curOrbitState.permutation[idx],\n            (orbitDefinition.orientations -\n              curOrbitState.orientation[idx] +\n              orientation) %\n              orbitDefinition.orientations,\n          );\n          let singleColor = false;\n          if (nextOrbitState) {\n            const fromNext = this.elementID(\n              orbitName,\n              nextOrbitState.permutation[idx],\n              (orbitDefinition.orientations -\n                nextOrbitState.orientation[idx] +\n                orientation) %\n                orbitDefinition.orientations,\n            );\n            if (fromCur === fromNext) {\n              singleColor = true; // TODO: Avoid redundant work during move.\n            }\n            fraction = fraction || 0; // TODO Use the type system to tie this to nextState?\n            const easedBackwardsPercent =\n              100 * (1 - fraction * fraction * (2 - fraction * fraction)); // TODO: Move easing up the stack.\n            this.gradients[id].children[0].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\n              \"offset\",\n              `${Math.max(easedBackwardsPercent - 5, 0)}%`,\n            );\n            this.gradients[id].children[2].setAttribute(\n              \"offset\",\n              `${Math.max(easedBackwardsPercent - 5, 0)}%`,\n            );\n            this.gradients[id].children[3].setAttribute(\n              \"offset\",\n              `${easedBackwardsPercent}%`,\n            );\n            this.gradients[id].children[4].setAttribute(\n              \"offset\",\n              `${easedBackwardsPercent}%`,\n            );\n            this.gradients[id].children[4].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromNext],\n            );\n            this.gradients[id].children[5].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromNext],\n            );\n          } else {\n            singleColor = true; // TODO: Avoid redundant work during move.\n          }\n          if (singleColor) {\n            this.gradients[id].children[0].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[2].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[3].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[4].setAttribute(\"offset\", `100%`);\n          }\n          // this.gradients[id]\n          // this.elementByID(id).style.fill = this.originalColors[from];\n        }\n      }\n    }\n  }\n\n  private newGradient(id: string, originalColor: string): SVGGradientElement {\n    const grad = document.createElementNS(\n      xmlns,\n      \"radialGradient\",\n    ) as SVGGradientElement;\n    grad.setAttribute(\"id\", `grad-${this.svgID}-${id}`);\n    grad.setAttribute(\"r\", `70.7107%`); // TODO: Adapt to puzzle.\n    const stopDefs = [\n      { offset: 0, color: originalColor },\n      { offset: 0, color: originalColor },\n      { offset: 0, color: \"black\" },\n      { offset: 0, color: \"black\" },\n      { offset: 0, color: originalColor },\n      { offset: 100, color: originalColor },\n    ];\n    for (const stopDef of stopDefs) {\n      const stop = document.createElementNS(xmlns, \"stop\") as SVGStopElement;\n      stop.setAttribute(\"offset\", `${stopDef.offset}%`);\n      stop.setAttribute(\"stop-color\", stopDef.color);\n      stop.setAttribute(\"stop-opacity\", \"1\");\n      grad.appendChild(stop);\n    }\n    return grad;\n  }\n\n  private elementID(\n    orbitName: string,\n    idx: number,\n    orientation: number,\n  ): string {\n    return orbitName + \"-l\" + idx + \"-o\" + orientation;\n  }\n\n  private elementByID(id: string): HTMLElement {\n    // TODO: Use classes and scope selector to SVG element.\n    return this.element.querySelector(\"#\" + id) as HTMLElement;\n  }\n}\n","import { experimentalNormalizePuzzleOrientation as normalize3x3x3Orientation } from \"../protocol\";\nimport { Transformation } from \"./definition_types\";\nimport { experimentalCube3x3x3KPuzzle as def } from \"../puzzles\";\nimport {\n  areOrbitTransformationsEquivalent,\n  areTransformationsEquivalent,\n} from \"./transformations\";\n\n// The `options` argument is required for now, because we haven't yet come up\n// with a general way to specify different kinds of solved for the same puzle.\nexport function experimentalIs3x3x3Solved(\n  transformation: Transformation,\n  options: { ignoreCenterOrientation: boolean },\n): boolean {\n  const normalized = normalize3x3x3Orientation(transformation);\n  if (options.ignoreCenterOrientation) {\n    return (\n      areOrbitTransformationsEquivalent(\n        def,\n        \"EDGES\",\n        normalized,\n        def.startPieces,\n      ) &&\n      areOrbitTransformationsEquivalent(\n        def,\n        \"CORNERS\",\n        normalized,\n        def.startPieces,\n      )\n    );\n  } else {\n    return areTransformationsEquivalent(def, normalized, def.startPieces);\n  }\n}\n","export {\n  reid3x3x3ToTwizzleBinary,\n  twizzleBinaryToReid3x3x3,\n} from \"./binary/binary3x3x3\";\nexport { bufferToSpacedHex, spacedHexToBuffer } from \"./binary/hex\";\n\nexport { normalizePuzzleOrientation as experimentalNormalizePuzzleOrientation } from \"./binary/puzzle-orientation\";\n","import { Transformation } from \"../../kpuzzle\";\nimport {\n  identityPermutation,\n  lexToPermutation,\n  maskToOrientations,\n  orientationsToMask,\n  permutationToLex,\n} from \"./orbit-indexing\";\nimport {\n  normalizePuzzleOrientation,\n  puzzleOrientationIdx,\n  reorientPuzzle,\n} from \"./puzzle-orientation\";\n\ntype Binary3x3x3State = ArrayBuffer;\n\n// Bit lengths of the encoded components, in order.\nconst BIT_LENGTHS = [29, 12, 16, 13, 3, 2, 1, 12];\n\n// These fields are sorted by the order in which they appear in the binary format.\nexport interface Binary3x3x3Components {\n  epLex: number; // 29 bits, edge permutation\n  eoMask: number; // 12 bits, edge orientation\n  cpLex: number; // 16 bits, corner permutation\n  coMask: number; // 13 bits, corner orientation\n  poIdxU: number; // 3 bits, puzzle orientation (U face)\n  poIdxL: number; // 2 bits, puzzle orientation (L face)\n  moSupport: number; // 1 bit, center orientation support\n  moMask: number; // 12 bits, center orientation\n}\n\n// There are various clever ways to do this, but this is simple and efficient.\nfunction arraySum(arr: number[]): number {\n  let total = 0;\n  for (const entry of arr) {\n    total += entry;\n  }\n  return total;\n}\n\n// Due to limitations in JS bit operations, this is unsafe if any of the bit lengths span across the contents of more than 4 bytes.\n// - Safe: [8, 32]\n// - Unsafe: [4, 32, 4]\n// - Unsafe: [40, 4]\nfunction splitBinary(bitLengths: number[], buffy: ArrayBuffer): number[] {\n  const u8buffy = new Uint8Array(buffy);\n  let at = 0;\n  let bits = 0;\n  let accum = 0;\n  const values: number[] = [];\n  for (const bitLength of bitLengths) {\n    while (bits < bitLength) {\n      accum = (accum << 8) | u8buffy[at++];\n      bits += 8;\n    }\n    values.push((accum >> (bits - bitLength)) & ((1 << bitLength) - 1));\n    bits -= bitLength;\n  }\n  return values;\n}\n\n// See above for safety notes.\nfunction concatBinary(bitLengths: number[], values: number[]): ArrayBuffer {\n  const buffy = new Uint8Array(Math.ceil(arraySum(bitLengths) / 8));\n  let at = 0;\n  let bits = 0;\n  let accum = 0;\n  for (let i = 0; i < bitLengths.length; i++) {\n    accum = (accum << bitLengths[i]) | values[i];\n    bits += bitLengths[i];\n    while (bits >= 8) {\n      buffy[at++] = accum >> (bits - 8);\n      bits -= 8;\n    }\n  }\n  if (bits > 0) {\n    buffy[at++] = accum << (8 - bits);\n  }\n  return buffy;\n}\n\n// 0x111 (for idxU) means \"not supported\"\nfunction supportsPuzzleOrientation(components: Binary3x3x3Components): boolean {\n  return components.poIdxU !== 7;\n}\n\nexport function reid3x3x3ToBinaryComponents(\n  state: Transformation,\n): Binary3x3x3Components {\n  const normedState = normalizePuzzleOrientation(state);\n\n  const epLex = permutationToLex(normedState[\"EDGES\"].permutation);\n  const eoMask = orientationsToMask(2, normedState[\"EDGES\"].orientation);\n  const cpLex = permutationToLex(normedState[\"CORNERS\"].permutation);\n  const coMask = orientationsToMask(3, normedState[\"CORNERS\"].orientation);\n  const [poIdxU, poIdxL] = puzzleOrientationIdx(state);\n  const moSupport = 1; // Required for now.\n  const moMask = orientationsToMask(4, normedState[\"CENTERS\"].orientation);\n\n  return {\n    epLex,\n    eoMask,\n    cpLex,\n    coMask,\n    poIdxU,\n    poIdxL,\n    moSupport,\n    moMask,\n  };\n}\n\nexport function binaryComponentsToTwizzleBinary(\n  components: Binary3x3x3Components,\n): Binary3x3x3State {\n  const {\n    epLex,\n    eoMask,\n    cpLex,\n    coMask,\n    poIdxU,\n    poIdxL,\n    moSupport,\n    moMask,\n  } = components;\n\n  return concatBinary(BIT_LENGTHS, [\n    epLex,\n    eoMask,\n    cpLex,\n    coMask,\n    poIdxU,\n    poIdxL,\n    moSupport,\n    moMask,\n  ]);\n}\n\nexport function reid3x3x3ToTwizzleBinary(\n  state: Transformation,\n): Binary3x3x3State {\n  const components: Binary3x3x3Components = reid3x3x3ToBinaryComponents(state);\n  return binaryComponentsToTwizzleBinary(components);\n}\n\nexport function twizzleBinaryToBinaryComponents(\n  buffer: ArrayBuffer,\n): Binary3x3x3Components {\n  const [\n    epLex,\n    eoMask,\n    cpLex,\n    coMask,\n    poIdxU,\n    poIdxL,\n    moSupport,\n    moMask,\n  ] = splitBinary(BIT_LENGTHS, buffer);\n\n  return {\n    epLex,\n    eoMask,\n    cpLex,\n    coMask,\n    poIdxU,\n    poIdxL,\n    moSupport,\n    moMask,\n  };\n}\n\nexport function binaryComponentsToReid3x3x3(\n  components: Binary3x3x3Components,\n): Transformation {\n  if (components.moSupport !== 1) {\n    throw new Error(\"Must support center orientation.\");\n  }\n\n  const normedState = {\n    EDGES: {\n      permutation: lexToPermutation(12, components.epLex),\n      orientation: maskToOrientations(2, 12, components.eoMask),\n    },\n    CORNERS: {\n      permutation: lexToPermutation(8, components.cpLex),\n      orientation: maskToOrientations(3, 8, components.coMask),\n    },\n    CENTERS: {\n      permutation: identityPermutation(6),\n      orientation: maskToOrientations(4, 6, components.moMask),\n    },\n  };\n\n  if (!supportsPuzzleOrientation(components)) {\n    return normedState;\n  }\n\n  return reorientPuzzle(normedState, components.poIdxU, components.poIdxL);\n}\n\n// Returns a list of error string.\n// An empty list means validation success.\nfunction validateComponents(components: Binary3x3x3Components): string[] {\n  const errors = [];\n  if (components.epLex < 0 || components.epLex >= 479001600) {\n    errors.push(`epLex (${components.epLex}) out of range`);\n  }\n  if (components.cpLex < 0 || components.cpLex >= 40320) {\n    errors.push(`cpLex (${components.cpLex}) out of range`);\n  }\n  if (components.coMask < 0 || components.coMask >= 6561) {\n    errors.push(`coMask (${components.coMask}) out of range`);\n  }\n  if (components.poIdxU < 0 || components.poIdxU >= 6) {\n    // 0x111 (for idxU) means \"not supported\"\n    if (supportsPuzzleOrientation(components)) {\n      errors.push(`poIdxU (${components.poIdxU}) out of range`);\n    }\n  }\n  // The following cannot be (f decoded from binary properl) out of rangey.\n  if (components.eoMask < 0 || components.eoMask >= 4096) {\n    errors.push(`eoMask (${components.eoMask}) out of range`);\n  }\n  if (components.moMask < 0 || components.moMask >= 4096) {\n    errors.push(`moMask (${components.moMask}) out of range`);\n  }\n  if (components.poIdxL < 0 || components.poIdxL >= 4) {\n    errors.push(`poIdxL (${components.poIdxL}) out of range`);\n  }\n  if (components.moSupport < 0 || components.moSupport >= 2) {\n    errors.push(`moSupport (${components.moSupport}) out of range`);\n  }\n  return errors;\n}\n\nexport function twizzleBinaryToReid3x3x3(buffy: ArrayBuffer): Transformation {\n  const components = twizzleBinaryToBinaryComponents(buffy);\n  const errors = validateComponents(components);\n  if (errors.length !== 0) {\n    throw new Error(`Invalid binary state components: ${errors.join(\", \")}`);\n  }\n  return binaryComponentsToReid3x3x3(components);\n}\n","export function identityPermutation(numElems: number): number[] {\n  const arr = new Array(numElems);\n  for (let i = 0; i < numElems; i++) {\n    arr[i] = i;\n  }\n  return arr;\n}\n\n// Inclusive start, exclusive end (similar to `Array.prototype.slice`)\nexport function orientationsToMask(\n  radix: number,\n  orientations: number[],\n): number {\n  let val = 0;\n  for (const orientation of orientations) {\n    val *= radix;\n    val += orientation;\n  }\n  return val;\n}\n\n// Inclusive start, exclusive end (similar to `Array.prototype.slice`)\nexport function maskToOrientations(\n  radix: number,\n  numElems: number,\n  mask: number,\n): number[] {\n  const arr = [];\n  while (mask > 0) {\n    arr.push(mask % radix);\n    mask = Math.floor(mask / radix);\n  }\n  return new Array(numElems - arr.length).fill(0).concat(arr.reverse());\n}\n\n// From https://www.jaapsch.net/puzzles/compindx.htm#perm\nexport function permutationToLex(permutation: number[]): number {\n  const n = permutation.length;\n  let lexicographicIdx = 0;\n  for (let i = 0; i < n - 1; i++) {\n    lexicographicIdx = lexicographicIdx * (n - i);\n    for (let j = i + 1; j < n; j++) {\n      if (permutation[i] > permutation[j]) {\n        lexicographicIdx += 1;\n      }\n    }\n  }\n  return lexicographicIdx;\n}\n\n// From https://www.jaapsch.net/puzzles/compindx.htm#perm\nexport function lexToPermutation(\n  numPieces: number,\n  lexicographicIdx: number,\n): number[] {\n  const permutation: number[] = new Array(numPieces);\n  permutation[numPieces - 1] = 0;\n  for (let i = numPieces - 2; i >= 0; i--) {\n    permutation[i] = lexicographicIdx % (numPieces - i);\n    lexicographicIdx = Math.floor(lexicographicIdx / (numPieces - i));\n    for (let j = i + 1; j < numPieces; j++) {\n      if (permutation[j] >= permutation[i]) {\n        permutation[j] = permutation[j] + 1;\n      }\n    }\n  }\n  return permutation;\n}\n","import { Alg } from \"../../alg\";\nimport {\n  combineTransformations,\n  invertTransformation,\n  KPuzzle,\n  Transformation,\n} from \"../../kpuzzle\";\n// TODO: Should we expose this directly in the `puzzles` package for sync uses?\nimport { experimentalCube3x3x3KPuzzle as def } from \"../../puzzles\";\n\nexport function puzzleOrientationIdx(state: Transformation): [number, number] {\n  const idxU = state[\"CENTERS\"].permutation[0];\n  const idxD = state[\"CENTERS\"].permutation[5];\n  const unadjustedIdxL = state[\"CENTERS\"].permutation[1];\n  let idxL = unadjustedIdxL;\n  if (idxU < unadjustedIdxL) {\n    idxL--;\n  }\n  if (idxD < unadjustedIdxL) {\n    idxL--;\n  }\n  return [idxU, idxL];\n}\n\nconst puzzleOrientationCache: Transformation[][] = new Array(6)\n  .fill(0)\n  .map(() => {\n    return new Array(6);\n  });\n\n// We use a new block to avoid keeping a reference to temporary vars.\n{\n  const orientationKpuzzle = new KPuzzle(def);\n  const uAlgs: Alg[] = [\"\", \"z\", \"x\", \"z'\", \"x'\", \"x2\"].map((s) =>\n    Alg.fromString(s),\n  );\n  const yAlg = new Alg(\"y\");\n  for (const uAlg of uAlgs) {\n    orientationKpuzzle.reset();\n    orientationKpuzzle.applyAlg(uAlg);\n    for (let i = 0; i < 4; i++) {\n      orientationKpuzzle.applyAlg(yAlg);\n      const [idxU, idxL] = puzzleOrientationIdx(orientationKpuzzle.state);\n      puzzleOrientationCache[idxU][idxL] = invertTransformation(\n        def,\n        orientationKpuzzle.state,\n      );\n    }\n  }\n}\n\nexport function normalizePuzzleOrientation(s: Transformation): Transformation {\n  const [idxU, idxL] = puzzleOrientationIdx(s);\n  const orientationTransformation = puzzleOrientationCache[idxU][idxL];\n  return combineTransformations(def, s, orientationTransformation);\n}\n\n// TODO: combine with `orientPuzzle`?\nexport function reorientPuzzle(\n  s: Transformation,\n  idxU: number,\n  idxL: number,\n): Transformation {\n  const orientationTransformation = invertTransformation(\n    def,\n    puzzleOrientationCache[idxU][idxL],\n  );\n  return combineTransformations(def, s, orientationTransformation);\n}\n","export function bufferToSpacedHex(buffer: ArrayBuffer): string {\n  // buffer is an ArrayBuffer\n  return Array.prototype.map\n    .call(new Uint8Array(buffer), (x: number) =>\n      (\"00\" + x.toString(16)).slice(-2),\n    )\n    .join(\" \");\n}\n\nexport function spacedHexToBuffer(hex: string): Uint8Array {\n  return new Uint8Array(hex.split(\" \").map((c) => parseInt(c, 16)));\n}\n","const cacheLoader = require('../../cacheLoader');\n\nmodule.exports = cacheLoader(function loadJSBundle(bundle) {\n  return new Promise(function(resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function(e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function() {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n});\n","\"use strict\";\n\nlet cachedBundles = {};\nlet cachedPreloads = {};\nlet cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    let cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","import { ExperimentalStickering } from \"../../../twisty\";\nimport { asyncGetPuzzleGeometry } from \"../../async/async-pg3d\";\nimport { PuzzleLoader } from \"../../PuzzleLoader\";\nimport { PuzzleAppearance } from \"../../stickerings/appearance\";\nimport {\n  cubeAppearance,\n  cubeStickerings,\n} from \"../../stickerings/cube-stickerings\";\n\nexport const cube2x2x2: PuzzleLoader = {\n  id: \"2x2x2\",\n  fullName: \"2×2×2 Cube\",\n  def: async () => {\n    return await import(\"./2x2x2.kpuzzle.json\");\n  },\n  svg: async () => {\n    return (await import(\"./2x2x2.kpuzzle.svg\")).default;\n  },\n  pg: async () => {\n    return asyncGetPuzzleGeometry(\"2x2x2\");\n  },\n  appearance: (stickering: ExperimentalStickering): Promise<PuzzleAppearance> =>\n    cubeAppearance(cube2x2x2, stickering),\n  stickerings: cubeStickerings,\n};\n","import { ExperimentalStickering } from \"../../../twisty\";\nimport { asyncGetPuzzleGeometry } from \"../../async/async-pg3d\";\nimport { PuzzleLoader } from \"../../PuzzleLoader\";\nimport { PuzzleAppearance } from \"../../stickerings/appearance\";\nimport {\n  cubeAppearance,\n  cubeStickerings,\n} from \"../../stickerings/cube-stickerings\";\n\n// Include 3x3x3 in the main bundle for better performance.\nimport { cube3x3x3KPuzzle } from \"./3x3x3.kpuzzle.json_\";\n\nexport const cube3x3x3: PuzzleLoader = {\n  id: \"3x3x3\",\n  fullName: \"3×3×3 Cube\",\n  inventedBy: [\"Ernő Rubik\"],\n  inventionYear: 1974, // https://en.wikipedia.org/wiki/Rubik%27s_Cube#Conception_and_development\n  def: async () => {\n    // return await import(\"./3x3x3.kpuzzle.json\");\n    return cube3x3x3KPuzzle;\n  },\n  svg: async () => {\n    return (await import(\"./3x3x3.kpuzzle.svg\")).default;\n  },\n  llSVG: async () => {\n    return (await import(\"./3x3x3-ll.kpuzzle.svg\")).default;\n  },\n  pg: async () => {\n    return asyncGetPuzzleGeometry(\"3x3x3\");\n  },\n  appearance: (stickering: ExperimentalStickering): Promise<PuzzleAppearance> =>\n    cubeAppearance(cube3x3x3, stickering),\n  stickerings: cubeStickerings,\n};\n","import { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const clock: PuzzleLoader = {\n  id: \"clock\",\n  fullName: \"Clock\",\n  inventedBy: [\"Christopher C. Wiggs\", \"Christopher J. Taylor\"],\n  inventionYear: 1988, // Patent application year: https://www.jaapsch.net/puzzles/patents/us4869506.pdf\n  def: async () => {\n    return await import(\"./clock.kpuzzle.json\");\n  },\n  svg: async () => {\n    return (await import(\"./clock.kpuzzle.svg\")).default;\n  },\n};\n","import type { ExperimentalStickering } from \"../../../twisty\";\nimport { genericPGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { PuzzleAppearance } from \"../../stickerings/appearance\";\nimport {\n  ftoStickering,\n  ftoStickerings,\n} from \"../../stickerings/fto-stickerings\";\n\nconst fto = genericPGPuzzleLoader(\"FTO\", \"Face-Turning Octahedron\", {\n  inventedBy: [\"Karl Rohrbach\", \"David Pitcher\"], // http://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1663\n  inventionYear: 1983, // http://twistypuzzles.com/cgi-bin/puzzle.cgi?pkey=1663\n});\n\n// TODO: loading the stickering code async.\nfto.appearance = (\n  stickering: ExperimentalStickering,\n): Promise<PuzzleAppearance> => ftoStickering(fto, stickering);\nfto.stickerings = ftoStickerings;\n\nexport { fto };\n","import { ExperimentalStickering } from \"../../twisty\";\nimport { PuzzleLoader } from \"../PuzzleLoader\";\nimport {\n  PuzzleAppearance,\n  PuzzleStickering,\n  StickeringManager,\n  PieceSet,\n  PieceStickering,\n} from \"./appearance\";\n\nexport async function ftoStickering(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<PuzzleAppearance> {\n  const def = await puzzleLoader.def();\n  const puzzleStickering = new PuzzleStickering(def);\n  const m = new StickeringManager(def);\n\n  const experimentalFTO_FC = (): PieceSet =>\n    m.and([m.move(\"U\"), m.not(m.or(m.moves([\"F\", \"BL\", \"BR\"])))]);\n  const experimentalFTO_F2T = (): PieceSet =>\n    m.and([m.move(\"U\"), m.not(m.move(\"F\"))]);\n  const experimentalFTO_SC = (): PieceSet =>\n    m.or([\n      experimentalFTO_F2T(),\n      m.and([m.move(\"F\"), m.not(m.or(m.moves([\"U\", \"BL\", \"BR\"])))]),\n    ]);\n  const experimentalFTO_L2C = (): PieceSet =>\n    m.not(\n      m.or([\n        m.and([m.move(\"U\"), m.move(\"F\")]),\n        m.and([m.move(\"F\"), m.move(\"BL\")]),\n        m.and([m.move(\"F\"), m.move(\"BR\")]),\n        m.and([m.move(\"BL\"), m.move(\"BR\")]),\n      ]),\n    );\n  const experimentalFTO_LBT = (): PieceSet =>\n    m.not(\n      m.or([\n        m.and([m.move(\"F\"), m.move(\"BL\")]),\n        m.and([m.move(\"F\"), m.move(\"BR\")]),\n      ]),\n    );\n\n  switch (stickering) {\n    case \"full\":\n      break;\n    case \"experimental-fto-fc\":\n      puzzleStickering.set(\n        m.not(experimentalFTO_FC()),\n        PieceStickering.Ignored,\n      );\n      break;\n    case \"experimental-fto-f2t\":\n      puzzleStickering.set(\n        m.not(experimentalFTO_F2T()),\n        PieceStickering.Ignored,\n      );\n      break;\n    case \"experimental-fto-sc\":\n      puzzleStickering.set(\n        m.not(experimentalFTO_SC()),\n        PieceStickering.Ignored,\n      );\n      break;\n    case \"experimental-fto-l2c\":\n      puzzleStickering.set(\n        m.not(experimentalFTO_L2C()),\n        PieceStickering.Ignored,\n      );\n      break;\n    case \"experimental-fto-lbt\":\n      puzzleStickering.set(\n        m.not(experimentalFTO_LBT()),\n        PieceStickering.Ignored,\n      );\n      break;\n    default:\n      console.warn(\n        `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n      );\n      puzzleStickering.set(m.and(m.moves([])), PieceStickering.Dim);\n  }\n  return puzzleStickering.toAppearance();\n}\n\nexport async function ftoStickerings(): Promise<ExperimentalStickering[]> {\n  return [\n    \"full\",\n    \"experimental-fto-fc\",\n    \"experimental-fto-f2t\",\n    \"experimental-fto-sc\",\n    \"experimental-fto-l2c\",\n    \"experimental-fto-lbt\",\n  ];\n}\n","import { ExperimentalStickering } from \"../../../twisty\";\nimport { genericPGPuzzleLoader } from \"../../async/async-pg3d\";\nimport { PuzzleAppearance } from \"../../stickerings/appearance\";\nimport {\n  megaminxAppearance,\n  megaminxStickerings,\n} from \"../../stickerings/megaminx-stickerings\";\n\nconst megaminx = genericPGPuzzleLoader(\"megaminx\", \"Megaminx\", {\n  // Too many simultaneous inventors to name.\n  inventionYear: 1981, // Earliest date from https://www.jaapsch.net/puzzles/megaminx.htm\n});\n\n// TODO: loading the stickering code async.\nmegaminx.appearance = (\n  stickering: ExperimentalStickering,\n): Promise<PuzzleAppearance> => megaminxAppearance(megaminx, stickering);\nmegaminx.stickerings = megaminxStickerings;\n\nexport { megaminx };\n","import { ExperimentalStickering } from \"../../twisty\";\nimport { PuzzleLoader } from \"../PuzzleLoader\";\nimport { PuzzleAppearance } from \"./appearance\";\nimport { cubeAppearance } from \"./cube-stickerings\";\n\n// TODO: cache calculations?\nexport async function megaminxAppearance(\n  puzzleLoader: PuzzleLoader,\n  stickering: ExperimentalStickering,\n): Promise<PuzzleAppearance> {\n  switch (stickering) {\n    case \"full\":\n    case \"F2L\":\n    case \"LL\":\n      return cubeAppearance(puzzleLoader, stickering);\n    default:\n      console.warn(\n        `Unsupported stickering for ${puzzleLoader.id}: ${stickering}. Setting all pieces to dim.`,\n      );\n  }\n  return cubeAppearance(puzzleLoader, \"full\");\n}\n\nexport async function megaminxStickerings(): Promise<ExperimentalStickering[]> {\n  return [\"full\", \"F2L\", \"LL\"];\n}\n","import { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const pyraminx: PuzzleLoader = {\n  id: \"pyraminx\",\n  fullName: \"Pyraminx\",\n  inventedBy: [\"Uwe Meffert\"],\n  inventionYear: 1970, // https://en.wikipedia.org/wiki/Pyraminx#Description\n  def: async () => {\n    return await import(\"./pyraminx.kpuzzle.json\");\n  },\n  svg: async () => {\n    return (await import(\"./pyraminx.kpuzzle.svg\")).default;\n  },\n};\n","import { PuzzleLoader } from \"../../PuzzleLoader\";\n\nexport const square1: PuzzleLoader = {\n  id: \"square1\",\n  fullName: \"Square-1\",\n  inventedBy: [\"Karel Hršel\", \"Vojtech Kopský\"],\n  inventionYear: 1990, // Czech patent application year: http://spisy.upv.cz/Patents/FullDocuments/277/277266.pdf\n  def: async () => {\n    return await import(\"./sq1-hyperorbit.kpuzzle.json\");\n  },\n  svg: async () => {\n    return (await import(\"./sq1-hyperorbit.kpuzzle.svg\")).default;\n  },\n};\n"],"names":["require","register","JSON","parse","puzzles","cube3x3x3","cube2x2x2","clock","megaminx","pyraminx","inventedBy","square1","fto","inventionYear","cube3x3x3KPuzzle","name","orbits","EDGES","numPieces","orientations","CORNERS","CENTERS","startPieces","permutation","orientation","moves","U","y","x","L","F","R","B","D","z","M","E","S","u","l","f","r","b","d","asyncGetPuzzleGeometry","puzzleName","puzzleGeometry","getPuzzleGeometryByName","asyncGetDef","writekpuzzle","genericPGPuzzleLoader","id","fullName","info","puzzleLoader","def","svg","pg","generatesvg","cubePGPuzzleLoader","appearance","cubeAppearance","bind","stickerings","cubeStickerings","stickering","puzzleStickering","PuzzleStickering","m","StickeringManager","LL","move","orUD","or","not","orLR","orFB","F2L","centerU","and","edgeFR","cornerDFR","slotFR","L6E","dimF2L","set","PieceStickering","Dim","setPLL","PermuteNonPrimary","setOLL","IgnoreNonPrimary","Regular","dimOLL","Ignoriented","Ignored","OrientationWithoutPermutation","OrientationStickers","all","Invisible","console","warn","toAppearance","getFaceletAppearance","orbitName","pieceIdx","faceletIdx","hint","orbitAppearance","pieceAppearance","pieces","regular","faceletAppearance","facelets","hintAppearance","PieceAnnotation","constructor","defaultValue","Map","orbitDef","Object","entries","Array","fill","ignored","oriented","invisible","dim","i","o","invisiblePiece","riiii","drrrr","diiii","oiiii","getPieceAppearance","pieceStickering","pieceSet","length","get","pieceStickerings","push","pieceSets","newPieceSet","pieceLoop","moveSource","transformation","Move","fromString","moveSources","map","transformationForQuantumMove","quantumMove","getNotationLayer","lookupMove","Error","toString","transformationForMove","moveNotation","KPuzzleMoveNotation","key","cache","quantumKey","quantum","effectiveAmount","KPuzzle","definition","state","reset","serialize","output","join","slice","applyMove","applyAlg","alg","experimentalLeafMoves","lasto","isIdentity","omod","perm","n","idx","ori","combineTransformations","t1","t2","newTrans","oDef","o1","o2","newPerm","newOri","multiplyTransformations","t","amount","invertTransformation","identityTransformation","halfish","Math","floor","twiceHalfish","orbitDefinition","newPermutation","newOrientation","orbitTransformation","fromIdx","gcd","a","transformationOrder","w","om","pm","areOrbitTransformationsEquivalent","options","ignoreOrientation","ignorePermutation","areTransformationsEquivalent","areStatesEquivalent","InternalMove","base","twist","getTransformation","canon","transforms","asString","mod","moveorder","tw","nam","movenames","Canonicalizer","basemoves","mv1","moveindex","baseMoveCount","commutes","j","ab","ba","ct","order","mult","blockMoveToInternalMove","quantumMoveStr","ind","sequenceToSearchSequence","tr","ss","SearchSequence","appendOneMove","mergeSequenceToSearchSequence","mergeOneMove","trans","clone","moveseq","mv","onlyMergeOneMove","popMove","pop","oneMoreTwist","lastmv","mo","splice","mergeSequence","seq","getSequenceAsString","CanonicalSequenceIterator","targetLength","nextState","canonstate","newstate","prevbase","genSequence","togo","generator","genSequenceTree","pegParseKPuzzleDefinition","peg$subclass","child","parent","C","prototype","peg$SyntaxError","message","expected","found","location","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","part","isArray","classEscape","inverted","any","end","other","description","describeExpectation","hex","ch","charCodeAt","toUpperCase","s","replace","type","describeExpected","descriptions","sort","describeFound","peg$parse","input","undefined","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$classExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$f0","fixMoves","peg$f1","characters","peg$f2","first","rest","concat","peg$f3","parseInt","peg$f4","identifier","peg$f5","set_identifier","num_pieces","num_orientations","peg$f6","orbit","peg$f7","peg$f8","num","nums","peg$f9","peg$f10","fixPermutation","peg$f11","peg$f12","peg$f13","definitions","peg$f14","peg$f15","peg$f16","peg$f17","peg$f18","peg$f19","start_pieces","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$expected","peg$silentFails","peg$result","startRule","substring","offset","range","peg$computeLocation","peg$buildStructuredError","peg$otherExpectation","error","peg$buildSimpleError","ignoreCase","peg$anyExpectation","peg$endExpectation","peg$computePosDetails","pos","details","p","peg$VALIDFILENAME","filename","startPos","endPos","loc","startPosDetails","endPosDetails","peg$begin","variants","peg$expect","top","peg$end","invert","e","apply","peg$buildError","failPos","charAt","s0","s1","rule$expects","peg$parseDEFINITION_FILE","peg$parseIDENTIFIER","s2","test","peg$parseSET_IDENTIFIER","s3","peg$parseNUMBER","peg$parseSPACE","peg$parseNAME","substr","peg$parseORBIT","s4","s5","s6","s7","peg$parseORBITS","peg$parseNEWLINE","peg$parseNEWLINES","peg$parseOPTIONAL_NEWLINES","peg$parseNUMBERS","peg$parsePERMUTATION","peg$parseDEFINITION","peg$parseDEFINITIONS","peg$parseSTART_PIECES","peg$parseMOVE","peg$parseMOVES","s8","moveName","moveOrbit","oldOrientation","module","exports","SyntaxError","xmlns","svgCounter","nextSVGID","colorMaps","KPuzzleSVGWrapper","kPuzzleDefinition","svgSource","experimentalAppearance","svgID","element","document","createElement","classList","add","innerHTML","svgElem","querySelector","namespaceURI","style","maxWidth","maxHeight","gradientDefs","createElementNS","insertBefore","firstChild","elementID","elem","elementByID","originalColor","colorMap","originalColors","gradients","newGradient","appendChild","setAttribute","drawKPuzzle","kpuzzle","fraction","draw","curOrbitState","nextOrbitState","fromCur","singleColor","fromNext","easedBackwardsPercent","children","max","grad","stopDefs","color","stopDef","stop","experimentalIs3x3x3Solved","normalized","ignoreCenterOrientation","BIT_LENGTHS","arraySum","arr","total","entry","splitBinary","bitLengths","buffy","u8buffy","Uint8Array","at","bits","accum","values","bitLength","concatBinary","ceil","supportsPuzzleOrientation","components","poIdxU","reid3x3x3ToBinaryComponents","normedState","epLex","eoMask","cpLex","coMask","poIdxL","moSupport","moMask","binaryComponentsToTwizzleBinary","reid3x3x3ToTwizzleBinary","twizzleBinaryToBinaryComponents","buffer","binaryComponentsToReid3x3x3","validateComponents","errors","twizzleBinaryToReid3x3x3","identityPermutation","numElems","orientationsToMask","radix","val","maskToOrientations","mask","reverse","permutationToLex","lexicographicIdx","lexToPermutation","puzzleOrientationIdx","idxU","idxD","unadjustedIdxL","idxL","puzzleOrientationCache","orientationKpuzzle","uAlgs","Alg","yAlg","uAlg","normalizePuzzleOrientation","orientationTransformation","reorientPuzzle","bufferToSpacedHex","call","spacedHexToBuffer","split","c","Promise","getBundleURL","then","bundle","root","default","llSVG","ftoStickerings","ftoStickering","experimentalFTO_FC","experimentalFTO_F2T","experimentalFTO_SC","experimentalFTO_L2C","experimentalFTO_LBT","megaminxStickerings","megaminxAppearance"],"version":3,"file":"index.fd284134.js.map"}